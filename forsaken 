task.spawn(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Forsaken/main/Hitboxfunction"))()
setclipboard = nil
wait(2)
getgenv().RV = 0
end)

task.spawn(function()
-- Break maxstamina Loop (standalone version)
local staminaModule = require(game.ReplicatedStorage:WaitForChild("Systems")
    :WaitForChild("Character")
    :WaitForChild("Game")
    :WaitForChild("Sprinting"))

if staminaModule then
    -- Hook thuộc tính MaxStamina để không thể bị thay đổi
    local mt = getrawmetatable(staminaModule)
    setreadonly(mt, false)
    local oldIndex = mt.__newindex
    mt.__newindex = function(t, k, v)
        if k == "MaxStamina" then
            warn("[BlockInfStamina] Prevented setting MaxStamina:", v)
            return
        end
        return oldIndex(t, k, v)
    end
    setreadonly(mt, true)
    
    -- Hook __staminaChangedEvent:Fire để không cho script khác gọi
    if staminaModule.__staminaChangedEvent then
        staminaModule.__staminaChangedEvent.Fire = function() end
    end

    print("[BlockInfStamina] Hooked and blocked loop changes.")
else
    warn("[BlockInfStamina] staminaModule not found.")
end
end)





local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Articles-Hub/ROBLOXScript/refs/heads/main/Library/LinoriaLib/Test.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Articles-Hub/ROBLOXScript/refs/heads/main/Library/LinoriaLib/addons/ThemeManagerCopy.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Articles-Hub/ROBLOXScript/refs/heads/main/Library/LinoriaLib/addons/SaveManagerCopy.lua"))()
local Options = Library.Options
local Toggles = Library.Toggles

function Notification(Message, Time)
if _G.ChooseNotify == "Obsidian" then
Library:Notify(Message, Time or 5)
elseif _G.ChooseNotify == "Roblox" then
game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Error",Text = Message,Icon = "rbxassetid://7733658504",Duration = Time or 5})
end
if _G.NotificationSound then
        local sound = Instance.new("Sound", workspace)
            sound.SoundId = "rbxassetid://4590662766"
            sound.Volume = _G.VolumeTime or 2
            sound.PlayOnRemove = true
            sound:Destroy()
        end
    end

Library:SetDPIScale(85)

local Window = Library:CreateWindow({
    Title = "IgnahK | Forsaken",
    Center = true,
    AutoShow = true,
    Resizable = true,
    Footer = "Script by IganhK",
	Icon = 0,
	AutoLock = false,
    ShowCustomCursor = true,
    NotifySide = "Right",
    TabPadding = 2,
    MenuFadeTime = 0
})

Tabs = {
	Tab = Window:AddTab("Game", "rbxassetid://7734053426"),
	["UI Settings"] = Window:AddTab("UI Settings", "rbxassetid://7733955511")
}

local Main1Group = Tabs.Tab:AddLeftGroupbox("Main")

-- first, set a default global delay
_G.AutoGeneralDelay = 1.8

-- add a slider to tweak the delay
Main1Group:AddSlider("GeneralDelay", {
    Text = "General Delay (s)",
    Min = 1.8,
    Max = 10,
    Default = _G.AutoGeneralDelay,
    Rounding = 1,
    Callback = function(val)
        _G.AutoGeneralDelay = val
    end
})

-- then your toggle, using that delay
Main1Group:AddToggle("AutoGeneral", {
    Text = "Auto General",
    Default = false,
    Callback = function(Value)
        _G.AutoGeneral = Value
        -- spawn a new loop task whenever toggled on
        task.spawn(function()
            while _G.AutoGeneral do
                if workspace.Map.Ingame:FindFirstChild("Map") then
                    for _, v in ipairs(workspace.Map.Ingame.Map:GetChildren()) do
                        if v.Name == "Generator"
                        and v:FindFirstChild("Remotes")
                        and v.Remotes:FindFirstChild("RE") then
                            v.Remotes.RE:FireServer()
                        end
                    end
                end
                task.wait(_G.AutoGeneralDelay)
            end
        end)
    end
})

Main1Group:AddToggle("Inf Stamina", {
    Text = "Inf Stamina",
    Default = false, 
    Callback = function(Value) 
_G.InfStamina = Value
while _G.InfStamina do
local staminaModule = require(game.ReplicatedStorage:WaitForChild("Systems"):WaitForChild("Character"):WaitForChild("Game"):WaitForChild("Sprinting"))
if staminaModule then
    staminaModule.Stamina = 100
    staminaModule.__staminaChangedEvent:Fire(staminaModule.Stamina)
end
task.wait(2)
end
    end
})

Main1Group:AddToggle("ToggleRestoreGUI", {
    Text = "Rest0re Stamina GUI",
    Default = false,
    Callback = function(state)
        local player = game.Players.LocalPlayer
        local gui = player:WaitForChild("PlayerGui"):FindFirstChild("RestoreStaminaGui")

        -- Nếu chưa tồn tại GUI thì tạo mới
        if not gui then
            gui = Instance.new("ScreenGui")
            gui.Name = "RestoreStaminaGui"
            gui.ResetOnSpawn = false
            gui.Parent = player:WaitForChild("PlayerGui")

            local mainFrame = Instance.new("Frame")
            mainFrame.Size = UDim2.new(0, 260, 0, 120)
            mainFrame.Position = UDim2.new(0.5, -130, 1, -150)
            mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
            mainFrame.BorderColor3 = Color3.new(1, 0, 0)
            mainFrame.BorderSizePixel = 1
            mainFrame.Active = true
            mainFrame.Draggable = true
            mainFrame.Parent = gui

            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, 0, 0, 30)
            title.BackgroundTransparency = 1
            title.Text = "RestOre Stamina"
            title.TextColor3 = Color3.new(1, 0, 0)
            title.TextScaled = true
            title.Font = Enum.Font.Code
            title.Parent = mainFrame

            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -20, 0, 50)
            button.Position = UDim2.new(0, 10, 0, 50)
            button.BackgroundColor3 = Color3.new(0, 0, 0)
            button.BorderColor3 = Color3.new(1, 0, 0)
            button.BorderSizePixel = 1
            button.Text = "Activate"
            button.TextColor3 = Color3.new(1, 0, 0)
            button.TextScaled = true
            button.Font = Enum.Font.Code
            button.Parent = mainFrame

            button.MouseButton1Click:Connect(function()
                _G.InfStamina = true
                local suc, err = pcall(function()
                    local sprinting = require(game.ReplicatedStorage:WaitForChild("Systems"):WaitForChild("Character"):WaitForChild("Game"):WaitForChild("Sprinting"))
                    if sprinting then
                        sprinting.Stamina = 101
                        sprinting.__staminaChangedEvent:Fire(sprinting.Stamina)
                    end
                end)
                if not suc then
                    warn("InfStamina Error:", err)
                end
            end)
        end

        -- Bật/Tắt GUI
        gui.Enabled = state
    end
})


Main1Group:AddDivider()


Main1Group:AddLabel("Shedletsky", true) 
Main1Group:AddToggle("AutoSlash (Passive)", {
    Text = "Auto Slash (Passive)",
    Default = false,
    Callback = function(Value)
        _G.AutoSlash = Value
        task.spawn(function()
            local TweenService = game:GetService("TweenService")
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Remote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")

            local function GetHRP()
                local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                return char:FindFirstChild("HumanoidRootPart")
            end

            local function GetHumanoid()
                local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                return char:FindFirstChild("Humanoid")
            end

            -- 🔁 MỚI: Chỉ cho phép khi LocalPlayer là Shedletsky Survivor
            local function IsShedletskySurvivor()
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                return character and character.Name == "Shedletsky"
            end

            local function GetNearestKiller()
                local nearest, minDist = nil, math.huge
                local hrp = GetHRP()
                if not hrp then return end
                for _, v in pairs(workspace.Players:GetChildren()) do
                    if v.Name == "Killers" then
                        for _, killer in pairs(v:GetChildren()) do
                            if killer ~= LocalPlayer.Character then
                                local hrp2 = killer:FindFirstChild("HumanoidRootPart")
                                local hum = killer:FindFirstChildOfClass("Humanoid")
                                if hrp2 and hum and hum.Health > 0 then
                                    local dist = (hrp.Position - hrp2.Position).Magnitude
                                    if dist <= 20 then
                                        local directionToLocal = (hrp.Position - hrp2.Position).Unit
                                        local killerLook = hrp2.CFrame.LookVector.Unit
                                        local dotLook = killerLook:Dot(directionToLocal)

                                        local killerVelocity = hrp2.Velocity.Unit
                                        local dotMove = killerVelocity:Dot(directionToLocal)

                                        -- Killer phải nhìn và đi về phía LocalPlayer
                                        if dotLook > 0.11 and dotMove > 0.8 and dist < minDist then
                                            minDist = dist
                                            nearest = hrp2
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                return nearest
            end

            while _G.AutoSlash do
                -- ❌ Nếu không phải Shedletsky thì không hoạt động
                if not IsShedletskySurvivor() then
                    task.wait(1)
                    continue
                end

                local humanoid = GetHumanoid()
                local hrp = GetHRP()
                if humanoid and humanoid.WalkSpeed < 26 and hrp then
                    local target = GetNearestKiller()
                    if target then
                        -- Slash
                        local args = { "UseActorAbility", "Slash" }
                        Remote:FireServer(unpack(args))

                        -- Xoay liên tục trong 3s
                        local startTime = tick()
                        while tick() - startTime < 2.2 and _G.AutoSlash do
                            if not target.Parent then break end
                            local dir = (target.Position - hrp.Position).Unit
                            local look = CFrame.new(hrp.Position, hrp.Position + Vector3.new(dir.X, 0, dir.Z))
                            hrp.CFrame = look
                            task.wait()
                        end

                        task.wait(37)
                    end
                end
                task.wait(0.25)
            end
        end)
    end
})

getgenv().AutoAimShed = false

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local Remote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")

local lastAimTime = 0 -- thời điểm lần aim cuối

local function GetHRP()
    local char = LocalPlayer.Character
    return char and char:FindFirstChild("HumanoidRootPart") or nil
end

local function GetNearestKiller()
    local hrp = GetHRP()
    if not hrp then return nil end
    local killersFolder = Workspace:FindFirstChild("Players") and Workspace.Players:FindFirstChild("Killers")
    if not killersFolder then return nil end
    local nearest, minDist
    for _, killer in pairs(killersFolder:GetChildren()) do
        if killer ~= LocalPlayer.Character then
            local hrp2 = killer:FindFirstChild("HumanoidRootPart")
            local hum = killer:FindFirstChildOfClass("Humanoid")
            if hrp2 and hum and hum.Health > 0 then
                local dist = (hrp.Position - hrp2.Position).Magnitude
                if not minDist or dist < minDist then
                    minDist = dist
                    nearest = hrp2
                end
            end
        end
    end
    return nearest
end

if not getgenv().AutoAimHooked then
    getgenv().AutoAimHooked = true

    local oldNamecall
    oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
        local args = {...}
        local method = getnamecallmethod()

        if not checkcaller() and method == "FireServer" and self == Remote then
            local a1, a2 = args[1], args[2]

            if getgenv().AutoAimShed and a1 == "UseActorAbility" and a2 == "Slash" then
                -- Check cooldown
                if tick() - lastAimTime < 40 then
                    return oldNamecall(self, ...)
                end
                lastAimTime = tick()

                local result = oldNamecall(self, ...)

                task.spawn(function()
                    local start = tick()
                    while tick() - start <= 1.5 and getgenv().AutoAimShed do
                        local hrp, target = GetHRP(), GetNearestKiller()
                        if hrp and target then
                            local tgtPos = Vector3.new(target.Position.X, hrp.Position.Y, target.Position.Z)
                            hrp.CFrame = CFrame.new(hrp.Position, tgtPos)
                        end
                        task.wait()
                    end
                end)

                return result
            end
        end

        return oldNamecall(self, ...)
    end)
end

-- Toggle trong Obsidian Lib
Main1Group:AddToggle("AutoAimShed", {
    Text = "Auto Aim",
    Default = false,
    Callback = function(v)
        getgenv().AutoAimShed = v
    end
})


Main1Group:AddDivider()


Main1Group:AddLabel("Chance", true)
--// Auto Aim Chance (ObsidianLib)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Workspace = game:GetService("Workspace")

-- Config
local aimDuration = 1.7
local trackedAnimations = {
    ["103601716322988"] = true,
    ["133491532453922"] = true,
    ["86371356500204"] = true,
    ["76649505662612"] = true,
    ["81698196845041"] = true
}

-- State
local Humanoid, HRP = nil, nil
local lastTriggerTime = 0
local aiming = false
local originalWS, originalJP, originalAutoRotate = nil, nil, nil

-- Hàm lấy killer gần nhất
local function GetNearestKiller()
    if not HRP then return nil end
    local killersFolder = Workspace:FindFirstChild("Players") and Workspace.Players:FindFirstChild("Killers")
    if not killersFolder then return nil end
    local nearest, minDist
    for _, killer in pairs(killersFolder:GetChildren()) do
        if killer ~= LocalPlayer.Character then
            local hrp2 = killer:FindFirstChild("HumanoidRootPart")
            local hum = killer:FindFirstChildOfClass("Humanoid")
            if hrp2 and hum and hum.Health > 0 then
                local dist = (HRP.Position - hrp2.Position).Magnitude
                if not minDist or dist < minDist then
                    minDist = dist
                    nearest = hrp2
                end
            end
        end
    end
    return nearest
end

-- Hàm lấy animation đang chơi
local function GetPlayingAnimationIds()
    local ids = {}
    if Humanoid then
        for _, track in ipairs(Humanoid:GetPlayingAnimationTracks()) do
            if track.Animation and track.Animation.AnimationId then
                local id = track.Animation.AnimationId:match("%d+")
                if id then ids[id] = true end
            end
        end
    end
    return ids
end

-- Setup khi spawn
local function SetupChar(char)
    Humanoid = char:WaitForChild("Humanoid")
    HRP = char:WaitForChild("HumanoidRootPart")
end
if LocalPlayer.Character then
    SetupChar(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(SetupChar)

-- Tạo toggle trong ObsidianLib
Main1Group:AddToggle("AutoAimChance", {
    Text = "Auto Aim",
    Default = false,
    Callback = function(Value)
        getgenv().AutoAimChance = Value
    end
})

-- Loop aim
RunService.RenderStepped:Connect(function()
    if not getgenv().AutoAimChance or not Humanoid or not HRP then return end

    -- Phát hiện animation Chance
    local playing = GetPlayingAnimationIds()
    local triggered = false
    for id in pairs(trackedAnimations) do
        if playing[id] then
            triggered = true
            break
        end
    end

    if triggered then
        lastTriggerTime = tick()
        aiming = true
    end

    -- Aim trong 1.7s sau khi phát hiện animation
    if aiming and tick() - lastTriggerTime <= aimDuration then
        if not originalWS then
            originalWS = Humanoid.WalkSpeed
            originalJP = Humanoid.JumpPower
            originalAutoRotate = Humanoid.AutoRotate
        end
        Humanoid.AutoRotate = false
        HRP.AssemblyAngularVelocity = Vector3.zero

        local targetHRP = GetNearestKiller()
        if targetHRP then
            local predictedPos = targetHRP.Position
            local direction = (predictedPos - HRP.Position).Unit
            local yRot = math.atan2(-direction.X, -direction.Z)
            HRP.CFrame = CFrame.new(HRP.Position) * CFrame.Angles(0, yRot, 0)
        end
    elseif aiming then
        aiming = false
        if originalWS and originalJP and originalAutoRotate ~= nil then
            Humanoid.WalkSpeed = originalWS
            Humanoid.JumpPower = originalJP
            Humanoid.AutoRotate = originalAutoRotate
            originalWS, originalJP, originalAutoRotate = nil, nil, nil
        end
    end
end)



Main1Group:AddDivider()


Main1Group:AddLabel("Hitbox", true)
_G.RV_Value = 0

Main1Group:AddInput("Set dist", {
    Default = "0 ~ 1000",
    Numeric = true,
    Text = "Hitbox Dist",
    Placeholder = "Enter a number...",
    Callback = function(value)
        local num = tonumber(value)
        if num then
            if num >= 0 and num <= 1000 then
                _G.RV_Value = num
            else
                Library:Notify("Value must be between 0 and 1000", 5)
            end
        else
            Library:Notify("Invalid number", 5)
        end
    end
})

Main1Group:AddButton("Apply", function()
    getgenv().RV = _G.RV_Value
    Library:Notify("Dist set to: " .. tostring(_G.RV_Value))
end)

Main1Group:AddLabel("Survivors: 0 ~ 15", true)
Main1Group:AddLabel("Killers: 10 ~ 35", true)


-- Giá trị mặc định
_G.MaxStaminaValue = 100
_G.ApplyStamina = false

Main1Group:AddDivider()

Main1Group:AddLabel("Max Stamina", true)

Main1Group:AddInput("StaminaValue", {
    Default = tostring(_G.MaxStaminaValue),
    Numeric = true, -- chỉ nhập số
    Finished = true, -- chỉ gọi callback khi bấm Enter hoặc thoát input
    Text = "Enter Stamina (10 ~ 1000)",
    Callback = function(val)
        local num = tonumber(val)
        if num and num >= 10 and num <= 1000 then
            _G.MaxStaminaValue = num
            Library:Notify("Value must be between 0 and 1000", 5)
        else
            Library:Notify("Invalid number", 5)
        end
    end
})

Main1Group:AddToggle("ApplyStamina", {
    Text = "Apply",
    Default = false,
    Callback = function(Value)
        _G.ApplyStamina = Value
        if Value then
            task.spawn(function()
                while _G.ApplyStamina do
                    local staminaModule = require(game.ReplicatedStorage:WaitForChild("Systems"):WaitForChild("Character"):WaitForChild("Game"):WaitForChild("Sprinting"))
                    if staminaModule then
                        staminaModule.MaxStamina = _G.MaxStaminaValue
                        staminaModule.__staminaChangedEvent:Fire(staminaModule.Stamina)
                    end
                    task.wait(3)
                end
            end)
        else
            local staminaModule = require(game.ReplicatedStorage:WaitForChild("Systems"):WaitForChild("Character"):WaitForChild("Game"):WaitForChild("Sprinting"))
            if staminaModule then
                staminaModule.MaxStamina = 110
                staminaModule.__staminaChangedEvent:Fire(staminaModule.Stamina)
            end
            Library:Notify("Die, Wise, Cry", 5)
        end
    end
})


























local Main2Group = Tabs.Tab:AddRightGroupbox("Esp")

Main2Group:AddToggle("General", {
    Text = "Esp General",
    Default = false, 
    Callback = function(Value) 
_G.EspGeneral = Value
if _G.EspGeneral == false then
if workspace.Map.Ingame:FindFirstChild("Map") then
	for i, v in pairs(workspace.Map.Ingame:FindFirstChild("Map"):GetChildren()) do
		if v.Name == "Generator" then
			for x, n in pairs(v:GetChildren()) do
				if n.Name:find("Esp_") then
					n:Destroy()
				end
			end
		end
	end
end
end
while _G.EspGeneral do
if workspace.Map.Ingame:FindFirstChild("Map") then
for i, v in pairs(workspace.Map.Ingame:FindFirstChild("Map"):GetChildren()) do
if v.Name == "Generator" and v:FindFirstChild("Progress") then
if v:FindFirstChild("Esp_Highlight") then
	if v:FindFirstChild("Progress").Value == 100 then
		v:FindFirstChild("Esp_Highlight").FillColor = Color3.fromRGB(0, 255, 0)
		v:FindFirstChild("Esp_Highlight").OutlineColor = Color3.fromRGB(0, 255, 0)
	else
		v:FindFirstChild("Esp_Highlight").FillColor = _G.ColorLight or Color3.new(255, 255, 255)
		v:FindFirstChild("Esp_Highlight").OutlineColor = _G.ColorLight or Color3.new(255, 255, 255)
	end
end
if _G.EspHighlight == true and v:FindFirstChild("Esp_Highlight") == nil then
	local Highlight = Instance.new("Highlight")
	Highlight.Name = "Esp_Highlight"
	Highlight.FillColor = Color3.fromRGB(255, 255, 255) 
	Highlight.OutlineColor = Color3.fromRGB(255, 255, 255) 
	Highlight.FillTransparency = 0.5
	Highlight.OutlineTransparency = 0
	Highlight.Adornee = v
	Highlight.Parent = v
	elseif _G.EspHighlight == false and v:FindFirstChild("Esp_Highlight") then
	v:FindFirstChild("Esp_Highlight"):Destroy()
end
if v:FindFirstChild("Esp_Gui") and v["Esp_Gui"]:FindFirstChild("TextLabel") then
	v["Esp_Gui"]:FindFirstChild("TextLabel").Text = 
	        (_G.EspName == true and "General ("..v.Progress.Value.."%)" or "")..
            (_G.EspDistance == true and "\nDistance [ Fix ]" or "")
    v["Esp_Gui"]:FindFirstChild("TextLabel").TextSize = _G.EspGuiTextSize or 15
    v["Esp_Gui"]:FindFirstChild("TextLabel").TextColor3 = _G.EspGuiTextColor or Color3.new(255, 255, 255)
end
if _G.EspGui == true and v:FindFirstChild("Esp_Gui") == nil then
	GuiGenEsp = Instance.new("BillboardGui", v)
	GuiGenEsp.Adornee = v
	GuiGenEsp.Name = "Esp_Gui"
	GuiGenEsp.Size = UDim2.new(0, 100, 0, 150)
	GuiGenEsp.AlwaysOnTop = true
	GuiGenEsp.StudsOffset = Vector3.new(0, 3, 0)
	GuiGenEspText = Instance.new("TextLabel", GuiGenEsp)
	GuiGenEspText.BackgroundTransparency = 1
	GuiGenEspText.Font = Enum.Font.Code
	GuiGenEspText.Size = UDim2.new(0, 100, 0, 100)
	GuiGenEspText.TextSize = 15
	GuiGenEspText.TextColor3 = Color3.new(0,0,0) 
	GuiGenEspText.TextStrokeTransparency = 0.5
	GuiGenEspText.Text = ""
	local UIStroke = Instance.new("UIStroke")
	UIStroke.Color = Color3.new(0, 0, 0)
	UIStroke.Thickness = 1.5
	UIStroke.Parent = GuiGenEspText
	elseif _G.EspGui == false and v:FindFirstChild("Esp_Gui") then
	v:FindFirstChild("Esp_Gui"):Destroy()
end
end
end
end
task.wait()
end
    end
})

local function CreateItemESP(model, color, labelText)
	if model:FindFirstChild("ItemESP_Gui") then return end

	local head = model:FindFirstChildWhichIsA("BasePart")
	if not head then return end

	local gui = Instance.new("BillboardGui")
	gui.Name = "ItemESP_Gui"
	gui.Adornee = head
	gui.Size = UDim2.new(0, 100, 0, 40)
	gui.StudsOffset = Vector3.new(0, 2, 0)
	gui.AlwaysOnTop = true
	gui.Parent = head

	local lbl = Instance.new("TextLabel")
	lbl.Size = UDim2.new(1, 0, 1, 0)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.Code
	lbl.TextSize = 14
	lbl.TextColor3 = color
	lbl.Text = labelText
	lbl.TextStrokeTransparency = 0.5
	lbl.TextStrokeColor3 = Color3.new(0, 0, 0)
	lbl.Parent = gui
end

local function ClearItemESP(model)
	for _, v in ipairs(model:GetDescendants()) do
		if v:IsA("BillboardGui") and v.Name == "ItemESP_Gui" then
			v:Destroy()
		end
	end
end

local function HandleESP(itemName, color, labelText, enabledFlag)
	local RunService = game:GetService("RunService")
	local workspace = game:GetService("Workspace")
	local existing = {}

	-- Quét hiện tại
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("Model") and obj.Name == itemName then
			CreateItemESP(obj, color, labelText)
			table.insert(existing, obj)
		end
	end

	-- Theo dõi model mới thêm
	local con
	con = workspace.DescendantAdded:Connect(function(obj)
		if obj:IsA("Model") and obj.Name == itemName and _G[enabledFlag] then
			task.wait(0.1)
			CreateItemESP(obj, color, labelText)
			table.insert(existing, obj)
		end
	end)

	-- Dọn khi tắt
	repeat task.wait(0.5) until not _G[enabledFlag]
	con:Disconnect()
	for _, obj in ipairs(existing) do
		ClearItemESP(obj)
	end
	table.clear(existing)
end

-- Toggle BloxyCola
Main2Group:AddToggle("EspBloxyCola", {
	Text = "ESP BloxyCola",
	Default = false,
	Callback = function(v)
		_G.EspBloxyCola = v
		if v then
			task.spawn(function()
				HandleESP("BloxyCola", Color3.fromRGB(255, 255, 0), "Bloxy", "EspBloxyCola")
			end)
		end
	end
})

-- Toggle Medkit
Main2Group:AddToggle("EspMedkit", {
	Text = "ESP Medkit",
	Default = false,
	Callback = function(v)
		_G.EspMedkit = v
		if v then
			task.spawn(function()
				HandleESP("Medkit", Color3.fromRGB(255, 255, 0), "Medkit", "EspMedkit")
			end)
		end
	end
})

-- helper to apply ESP GUI to a single character model
function Esp_Player(characterModel)
    -- destroy any existing highlight
    if characterModel:FindFirstChild("Esp_Highlight") then
        characterModel.Esp_Highlight:Destroy()
    end

    -- remove any old GUI
    for _, gui in ipairs(characterModel:GetDescendants()) do
        if gui.Name == "Esp_Gui" then
            gui:Destroy()
        end
    end

    -- if ESP is disabled, ensure any lingering GUI is removed
    if _G.EspGui == false then
        -- nothing to create, just return
        return
    end

    -- only run if Esp_Gui is enabled
    if not _G.EspGui then return end

    local head = characterModel:FindFirstChild("Head")
    if not head then return end

    -- create new BillboardGui
    local gui = Instance.new("BillboardGui")
    gui.Name = "Esp_Gui"
    gui.Adornee = head
    gui.AlwaysOnTop = true
    gui.Size = UDim2.new(0, 100, 0, 40)
    gui.StudsOffset = Vector3.new(0, 3, 0)
    gui.Parent = head

    -- create text
    local lbl = Instance.new("TextLabel", gui)
    lbl.Name = "Esp_Text"
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, 0, 1, 0)
    lbl.Font = Enum.Font.Code
    lbl.TextSize = _G.EspGuiTextSize or 15
    lbl.TextStrokeTransparency = 0 -- keep Roblox stroke off, since we're using UIStroke

    -- add a black UIStroke outline
    local stroke = Instance.new("UIStroke", lbl)
    stroke.Color = Color3.new(0, 0, 0)
    stroke.Thickness = 1.5

    -- color red if killer
    local isKiller = (characterModel.Parent.Name == "Killers")
    lbl.TextColor3 = isKiller and Color3.fromRGB(255, 0, 0) or (_G.EspGuiTextColor or Color3.new(1,1,1))

    -- build the label text
    local parts = {}
    if _G.EspName then
        table.insert(parts, characterModel.Name)
    end
    if _G.EspDistance then
        local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local otherHRP = characterModel:FindFirstChild("HumanoidRootPart")
        if hrp and otherHRP then
            local d = (hrp.Position - otherHRP.Position).Magnitude
            table.insert(parts, ("Dist: %.1f"):format(d))
        end
    end
    if _G.EspHealth then
        local hum = characterModel:FindFirstChildOfClass("Humanoid")
        if hum then
            table.insert(parts, ("HP: %.0f"):format(hum.Health))
        end
    end

    lbl.Text = table.concat(parts, "\n")
end

Main2Group:AddDropdown("EspPlayer", {
    Text = "Section",
    Values = {"Killers", "Survivors"},
    Default = "",
    Multi = true
})

Main2Group:AddToggle("Player", {
    Text = "Enable Esp",
    Default = false, 
    Callback = function(Value) 
_G.EspPlayer = Value
if _G.EspPlayer == false then
	for i, v in pairs(game.Workspace.Players:GetChildren()) do
		if v.Name == "Killers" or v.Name == "Survivors" then
			for y, z in pairs(v:GetChildren()) do
				if z.Name:find("Esp_") then
					z:Destroy()
				end
			end
		end
	end
end
while _G.EspPlayer do
for i, v in pairs(game.Workspace.Players:GetChildren()) do
	if Options.EspPlayer.Value["Killers"] and v.Name == "Killers" then
		for y, z in pairs(v:GetChildren()) do
			if z:FindFirstChild("HumanoidRootPart") and z:FindFirstChild("Humanoid") and z:FindFirstChild("Head") then
				Esp_Player(z, _G.ColorLightKill or Color3.fromRGB(255, 0, 0))
			end
		end
	elseif not Options.EspPlayer.Value["Killers"] then
		if v.Name == "Killers" then
			for y, z in pairs(v:GetChildren()) do
				if z.Name:find("Esp_") then
					z:Destroy()
				end
			end
		end
	end
	if Options.EspPlayer.Value["Survivors"] and v.Name == "Survivors" then
		for y, z in pairs(v:GetChildren()) do
			if z:FindFirstChild("HumanoidRootPart") and z:FindFirstChild("Humanoid") and z:FindFirstChild("Head") then
				Esp_Player(z, _G.ColorLightSurvivors or Color3.fromRGB(0, 255, 0))
			end
		end
	elseif not Options.EspPlayer.Value["Survivors"] and v.Name == "Survivors" then
		for y, z in pairs(v:GetChildren()) do
			if z.Name:find("Esp_") then
				z:Destroy()
			end
		end
	end
end
task.wait()
end
    end
})

Main2Group:AddDivider()



_G.EspGui = false
Main2Group:AddToggle("Esp Gui", {
    Text = "Enable Gui",
    Default = false, 
    Callback = function(Value) 
_G.EspGui = Value
    end
}):AddColorPicker("Color Esp Text", {
     Default = Color3.new(255,255,255),
     Callback = function(Value)
_G.EspGuiTextColor = Value
     end
})

Main2Group:AddLabel("EspGui Function", true)

_G.EspName = false
Main2Group:AddToggle("Show Name", {
    Text = "Show Name",
    Default = false, 
    Callback = function(Value) 
_G.EspName = Value
    end
})

_G.EspDistance = false
Main2Group:AddToggle("Show Distance", {
    Text = "Show Distance",
    Default = false, 
    Callback = function(Value) 
_G.EspDistance = Value
    end
})

_G.EspHealth = false
Main2Group:AddToggle("Show Health", {
    Text = "Show Health",
    Default = false, 
    Callback = function(Value) 
_G.EspHealth = Value
    end
})

Main2Group:AddDivider()

Main2Group:AddLabel("Misc", true)

Main2Group:AddToggle("FullBright", {
    Text = "Full Bright",
    Default = false,
    Callback = function(Value)
        _G.FullBright = Value
        local Lighting = game:GetService("Lighting")

        -- Lưu giá trị gốc để khôi phục khi tắt
        if not _G._LightingSaved then
            _G._LightingSaved = {
                Brightness = Lighting.Brightness,
                Ambient = Lighting.Ambient,
                OutdoorAmbient = Lighting.OutdoorAmbient,
                FogEnd = Lighting.FogEnd,
                FogStart = Lighting.FogStart,
                GlobalShadows = Lighting.GlobalShadows
            }
        end

        if _G.FullBright then
            task.spawn(function()
                while _G.FullBright do
                    -- Set ánh sáng
                    Lighting.Brightness = 2
                    Lighting.Ambient = Color3.new(1, 1, 1)
                    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
                    Lighting.FogEnd = 100000
                    Lighting.FogStart = 0
                    Lighting.GlobalShadows = false

                    -- Xoá hiệu ứng gây mờ tối nếu có
                    for _, v in ipairs(Lighting:GetChildren()) do
                        if v:IsA("Atmosphere") or v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") then
                            v:Destroy()
                        end
                    end

                    task.wait(10) -- Lặp lại mỗi 10s
                end
            end)
        else
            -- Khôi phục Lighting gốc
            if _G._LightingSaved then
                Lighting.Brightness = _G._LightingSaved.Brightness
                Lighting.Ambient = _G._LightingSaved.Ambient
                Lighting.OutdoorAmbient = _G._LightingSaved.OutdoorAmbient
                Lighting.FogEnd = _G._LightingSaved.FogEnd
                Lighting.FogStart = _G._LightingSaved.FogStart
                Lighting.GlobalShadows = _G._LightingSaved.GlobalShadows
            end
        end
    end
})

Main2Group:AddButton("Remove MaxZoom Limit", function()
    -- Simple script to set the player’s max camera zoom distance to 300
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Ensure the Character loads
if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
    LocalPlayer.CharacterAdded:Wait()
end

-- Apply max zoom
LocalPlayer.CameraMaxZoomDistance = 300
       
end)

Main2Group:AddToggle("ShowPing", {
    Text = "Show YOUR Ping",
    Default = false,
    Callback = function(Value)
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local Stats = game:GetService("Stats")
        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")

        -- Lưu kết nối để ngắt khi tắt
        if not _G.PingConnections then
            _G.PingConnections = {}
        end

        if Value then
            -- Nếu chưa có GUI thì tạo
            if not game.CoreGui:FindFirstChild("PingGui") then
                local ScreenGui = Instance.new("ScreenGui")
                ScreenGui.Name = "PingGui"
                ScreenGui.ResetOnSpawn = false
                ScreenGui.Parent = game.CoreGui

                local Frame = Instance.new("Frame")
                Frame.Size = UDim2.new(0, 200, 0, 50)
                Frame.Position = UDim2.new(0.05, 0, 0.05, 0)
                Frame.BackgroundColor3 = Color3.new(0, 0, 0)
                Frame.BackgroundTransparency = 0.5
                Frame.BorderSizePixel = 0
                Frame.Active = true
                Frame.Draggable = false -- sẽ dùng drag mobile
                Frame.Parent = ScreenGui

                local PingLabel = Instance.new("TextLabel")
                PingLabel.Size = UDim2.new(1, 0, 1, 0)
                PingLabel.Position = UDim2.new(0, 0, 0, 0)
                PingLabel.BackgroundTransparency = 1
                PingLabel.TextColor3 = Color3.new(1, 1, 1)
                PingLabel.TextScaled = true
                PingLabel.Text = "Ping: 0 ms"
                PingLabel.Font = Enum.Font.Code
                PingLabel.Parent = Frame


                -- Cập nhật ping
                table.insert(_G.PingConnections, RunService.RenderStepped:Connect(function()
                    if not ScreenGui.Enabled then return end
                    local ping = Stats.Network.ServerStatsItem["Data Ping"]:GetValue()
                    PingLabel.Text = "Ping: " .. math.floor(ping) .. " ms"
                end))

                -- Không mất khi chết
                table.insert(_G.PingConnections, player.CharacterAdded:Connect(function()
                    ScreenGui.Parent = game.CoreGui
                end))
            else
                game.CoreGui.PingGui.Enabled = true
                -- Kết nối lại
                for _, conn in ipairs(_G.PingReconnect or {}) do
                    table.insert(_G.PingConnections, conn)
                end
            end
        else
            -- Tắt GUI & ngắt toàn bộ kết nối
            if game.CoreGui:FindFirstChild("PingGui") then
                game.CoreGui.PingGui.Enabled = false
            end
            for _, conn in ipairs(_G.PingConnections) do
                if conn and conn.Disconnect then
                    conn:Disconnect()
                end
            end
            _G.PingConnections = {}
        end
    end
})

Main2Group:AddDivider()
Main2Group:AddButton("Load InfYield Edit", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/infedit"))()  
end)
Main2Group:AddButton("Load c00lgh0st", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Forsaken/main/c00lgh0st"))()  
end)
Main2Group:AddButton("Load YOXI Hub", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Yomkaa/forsaken-YOXI-HUB/refs/heads/main/forsaken%20YOXI%20HUB",true))()
end)
Main2Group:AddButton("Load Walkto Gui", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/NowGeta/main/walkto"))()  
end)
Main2Group:AddButton("Load Auto Block", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Forsaken/main/autoblockguest"))()
end)







------------------------------------------------------------------------
local MenuGroup = Tabs["UI Settings"]:AddLeftGroupbox("Menu")
local CreditsGroup = Tabs["UI Settings"]:AddRightGroupbox("Credits")
local Info = Tabs["UI Settings"]:AddRightGroupbox("Info")

MenuGroup:AddDropdown("NotifySide", {
    Text = "Notification Side",
    Values = {"Left", "Right"},
    Default = "Right",
    Multi = false,
    Callback = function(Value)
Library:SetNotifySide(Value)
    end
})

_G.ChooseNotify = "Obsidian"
MenuGroup:AddDropdown("NotifyChoose", {
    Text = "Notification Choose",
    Values = {"Obsidian", "Roblox"},
    Default = "",
    Multi = false,
    Callback = function(Value)
_G.ChooseNotify = Value
    end
})

_G.NotificationSound = true
MenuGroup:AddToggle("NotifySound", {
    Text = "Notification Sound",
    Default = true, 
    Callback = function(Value) 
_G.NotificationSound = Value 
    end
})

MenuGroup:AddSlider("Volume Notification", {
    Text = "Volume Notification",
    Default = 2,
    Min = 2,
    Max = 10,
    Rounding = 1,
    Compact = true,
    Callback = function(Value)
_G.VolumeTime = Value
    end
})

MenuGroup:AddToggle("KeybindMenuOpen", {Default = false, Text = "Open Keybind Menu", Callback = function(Value) Library.KeybindFrame.Visible = Value end})
MenuGroup:AddToggle("ShowCustomCursor", {Text = "Custom Cursor", Default = true, Callback = function(Value) Library.ShowCustomCursor = Value end})
MenuGroup:AddDivider()
MenuGroup:AddLabel("Menu bind"):AddKeyPicker("MenuKeybind", {Default = "RightShift", NoUI = true, Text = "Menu keybind"})

MenuGroup:AddButton("Unload", function() Library:Unload() end)

CreditsGroup:AddLabel("@IgnahKD - Script", true)

Info:AddLabel("Counter [ "..game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(game.Players.LocalPlayer).." ]", true)
Info:AddLabel("Executor [ "..identifyexecutor().." ]", true)
Info:AddLabel("Job Id [ "..game.JobId.." ]", true)
Info:AddDivider()
Info:AddButton("Copy JobId", function()
    if setclipboard then
        setclipboard(tostring(game.JobId))
        Library:Notify("Copied Success")
    else
        Library:Notify(tostring(game.JobId), 10)
    end
end)

Info:AddInput("Join Job", {
    Default = "Put JobId in here",
    Numeric = false,
    Text = "Join Job",
    Placeholder = "UserJobId",
    Callback = function(Value)
_G.JobIdJoin = Value
    end
})

Info:AddButton("Join JobId", function()
game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, _G.JobIdJoin, game.Players.LocalPlayer)
end)

Info:AddButton("Copy Join JobId", function()
    if setclipboard then
        setclipboard('game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, '..game.JobId..", game.Players.LocalPlayer)")
        Library:Notify("Copied Success") 
    else
        Library:Notify(tostring(game.JobId), 10)
    end
end)

Library.ToggleKeybind = Options.MenuKeybind

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:BuildConfigSection(Tabs["UI Settings"])
ThemeManager:ApplyToTab(Tabs["UI Settings"])
SaveManager:LoadAutoloadConfig() 





