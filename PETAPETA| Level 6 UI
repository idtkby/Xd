-- Kiểm tra ID game
if game.PlaceId ~= 14476003462 and game.PlaceId ~= 79036558298014 then
    return warn("Script only works in the specified game (ID: 14476003462){PETAPETA [Chapter 2]}")
end

-- Thông báo khi đúng ID game
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "✓ Game Check Passed",
    Text = "Script is now executing...",
    Duration = 5
})

task.wait(1) -- Đợi 1s trước khi thực thi 

task.spawn(function()         
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

-- Danh sách ban: [UserId] = "YYYY-MM-DD HH:MM" (UTC+7)
local bannedUsers = {
    [7216214506] = "2025-08-19 10:00",
}

--[[
    []  = "YYYY-MM-DD 14:30"
yyyy là năm
mm là tháng
dd là ngày
]]

-- Chuyển chuỗi "YYYY-MM-DD HH:MM" thành timestamp
local function parseDateTime(str)
    local y, m, d, hh, mm = str:match("(%d+)%-(%d+)%-(%d+) (%d+):(%d+)")
    return os.time({
        year = tonumber(y),
        month = tonumber(m),
        day = tonumber(d),
        hour = tonumber(hh),
        min = tonumber(mm),
        sec = 0
    })
end

-- Lấy thời gian hiện tại UTC+7
local function getTimeUTC7()
    local now = os.date("!*t") -- UTC
    now.hour = now.hour + 7
    if now.hour >= 24 then
        now.hour = now.hour - 24
        now.day = now.day + 1
    elseif now.hour < 0 then
        now.hour = now.hour + 24
        now.day = now.day - 1
    end
    return os.time(now)
end

-- Kiểm tra ban
local banTimeStr = bannedUsers[lp.UserId]
if banTimeStr then
    local nowTime = getTimeUTC7()
    local banTime = parseDateTime(banTimeStr)
    if nowTime < banTime then
        lp:Kick("You has been banned by script\nYou can play again after: " .. banTimeStr .. " UTC+7")
    end
end
end)

task.spawn(function()         
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

-- Danh sách ban: [UserId] = "YYYY-MM-DD HH:MM" (UTC+7)
local bannedUsers = {
    [6180249904] = "2025-08-15 15:50",
}

--[[
    []  = "YYYY-MM-DD 14:30"
yyyy là năm
mm là tháng
dd là ngày
]]

-- Chuyển chuỗi "YYYY-MM-DD HH:MM" thành timestamp
local function parseDateTime(str)
    local y, m, d, hh, mm = str:match("(%d+)%-(%d+)%-(%d+) (%d+):(%d+)")
    return os.time({
        year = tonumber(y),
        month = tonumber(m),
        day = tonumber(d),
        hour = tonumber(hh),
        min = tonumber(mm),
        sec = 0
    })
end

-- Lấy thời gian hiện tại UTC+7
local function getTimeUTC7()
    local now = os.date("!*t") -- UTC
    now.hour = now.hour + 7
    if now.hour >= 24 then
        now.hour = now.hour - 24
        now.day = now.day + 1
    elseif now.hour < 0 then
        now.hour = now.hour + 24
        now.day = now.day - 1
    end
    return os.time(now)
end

-- Kiểm tra ban
local banTimeStr = bannedUsers[lp.UserId]
if banTimeStr then
    local nowTime = getTimeUTC7()
    local banTime = parseDateTime(banTimeStr)
    if nowTime < banTime then
        lp:Kick("Gió cmm bớt spam request\nYou can play again after: " .. banTimeStr .. " UTC+7")
    end
end
end)

task.spawn(function()
print("----    ---- ----    ----    ------    ----    ---- ------------ ") print("****   ****  ****    ****   ********   *****   **** ************ ") print("----  ----   ----    ----  ----------  ------  ---- ----         ") print("*********    ************ ****    **** ************ ****  ****** ") print("---------    ------------ ------------ ------------ ----  ------ ") print("****  ****   ****    **** ************ ****  ****** ****    **** ") print("----   ----  ----    ---- ----    ---- ----   ----- ------------ ") print("****    **** ****    **** ****    **** ****    **** ************ ")                                                                  
end)

task.spawn(function()
-- Khai báo các dịch vụ cần thiết
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera

-- Tải và khởi tạo thư viện GUI Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Tạo cửa sổ giao diện chính
local Window = Rayfield:CreateWindow({
    Name = "Script By IgnahK [PETAPETA [Chapter 2]]",
    LoadingTitle = "Loading Script...",
    LoadingSubtitle = "Please wait",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MyHubFolder",
        FileName = "MyHubConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = false
    },
    KeySystem = false,
})

-- Thông báo đã tải
Rayfield:Notify({
    Title = "Welcome!",
    Content = "Script Loaded",
    Duration = 2
})


-- Tạo hàm ESP chung
local function autoESP(filterFn, color, labelText)
	task.spawn(function()
		while true do
			for _, obj in ipairs(workspace:GetDescendants()) do
				if filterFn(obj) then
					if not obj:FindFirstChild("AutoESP") then
						local hl = Instance.new("Highlight")
						hl.Name = "AutoESP"
						hl.OutlineColor = color
						hl.OutlineTransparency = 0
						hl.FillTransparency = 1
						hl.Parent = obj
					end
					if not obj:FindFirstChild("ESPLabel") and obj:IsA("BasePart") then
						local bill = Instance.new("BillboardGui", obj)
						bill.Name = "ESPLabel"
						bill.Size = UDim2.new(0, 100, 0, 40)
						bill.StudsOffset = Vector3.new(0, 2, 0)
						bill.AlwaysOnTop = true
						local txt = Instance.new("TextLabel", bill)
						txt.Size = UDim2.new(1, 0, 1, 0)
						txt.BackgroundTransparency = 1
						txt.TextColor3 = color
						txt.TextStrokeTransparency = 0.5
						txt.Text = labelText or obj.Name
						txt.Font = Enum.Font.Bodoni
						txt.TextScaled = true
					end
				end
			end
			task.wait(5)
		end
	end)
end
--[[ -- example
mainTab:CreateButton({
	Name = "Esp Box",
	Callback = function()
		autoESP(function(p)
			return p:IsA("BasePart") and p.Name == "BoxBottom"
		end, Color3.fromRGB(0, 255, 0), "Box")
	end,
})
]]

-- Tab chính
local V1 = Window:CreateTab("Visual [Chapter 1]", "eye")

-- ESP Buttons
V1:CreateButton({
	Name = "Esp PetaPeta",
	Callback = function()
	task.spawn(function()
	local espColor = Color3.fromRGB(255, 133, 145) -- Màu chữ + Highlight
	local outlineColor = Color3.fromRGB(0, 0, 0)   -- Viền chữ + viền highlight

	local function createESP(item)
		if item:FindFirstChild("EnemyESP") or item:FindFirstChild("ESPHighlight") then return end

		-- BillboardGui
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "EnemyESP"
		billboard.AlwaysOnTop = true
		billboard.Size = UDim2.new(0, 100, 0, 40)
		billboard.StudsOffset = Vector3.new(0, 2, 0)
		billboard.MaxDistance = math.huge
		billboard.Parent = item

		local textLabel = Instance.new("TextLabel")
		textLabel.Parent = billboard
		textLabel.Text = "Peta Peta"
		textLabel.TextColor3 = espColor
		textLabel.TextStrokeColor3 = outlineColor
		textLabel.TextStrokeTransparency = 0
		textLabel.BackgroundTransparency = 1
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.Font = Enum.Font.Bodoni
		textLabel.TextScaled = true

		-- Highlight
		local hl = Instance.new("Highlight")
		hl.Name = "ESPHighlight"
		hl.FillColor = espColor
		hl.FillTransparency = 0.5
		hl.OutlineColor = outlineColor
		hl.OutlineTransparency = 0
		hl.Adornee = item
		hl.Parent = item
	end

	local function isEnemyModel(model)
		return model:IsA("Model") and (model.Name == "EnemyModel" or model.Name == "EnemyModel_Stage6")
	end

	local function checkExisting()
		for _, item in ipairs(workspace:GetDescendants()) do
			if isEnemyModel(item) then
				createESP(item)
			end
		end
	end

	workspace.DescendantAdded:Connect(function(descendant)
		if isEnemyModel(descendant) then
			createESP(descendant)
		end
	end)

	checkExisting()
end)
task.spawn(function()
local SoundService = game:GetService("SoundService")

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://3165700530" -- đổi ID tùy ý
sound.Volume = 1
sound.Looped = false
sound.Name = "Alert"
sound.Parent = SoundService

sound:Play()

    task.spawn(function()
	local StarterGui = game:GetService("StarterGui")
	local Workspace = game:GetService("Workspace")
	local SoundService = game:GetService("SoundService")

	task.wait(0.5)

	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = "PETAPETA Notice",
			Text = "Loading…",
			Duration = 5,
			Icon = "rbxassetid://83439791036389",
		})
	end)

	local alertSound = Instance.new("Sound")
	alertSound.Name = "EnemyAlert"
	alertSound.SoundId = "rbxassetid://3165700530"
	alertSound.Volume = 1
	alertSound.Parent = SoundService

	local function sendNotice(text)
		pcall(function()
			StarterGui:SetCore("SendNotification", {
				Title = "Notice",
				Text = text,
				Duration = 5,
				Icon = "rbxassetid://83439791036389",
			})
		end)
	end

	local enemyModels = {} -- Danh sách đang tồn tại
	local enemyDetected = false

	local function countEnemies()
		local count = 0
		for obj in pairs(enemyModels) do
			if obj:IsDescendantOf(Workspace) then
				count += 1
			end
		end
		return count
	end

	local function monitorEnemy(model)
		if enemyModels[model] then return end
		enemyModels[model] = true

		if not enemyDetected then
			enemyDetected = true
			alertSound:Play()
			sendNotice("Hide or die ?, Except Ofuda")
		end

		local conn
		conn = model.AncestryChanged:Connect(function(_, parent)
			if not parent then
				enemyModels[model] = nil
				conn:Disconnect()

				if countEnemies() == 0 then
					enemyDetected = false
					sendNotice("PETAPETA-Sama disappeared")
				end
			end
		end)
	end

	-- Quét ban đầu
	for _, obj in ipairs(Workspace:GetDescendants()) do
		if obj:IsA("Model") and obj.Name == "EnemyModel" then
			monitorEnemy(obj)
		end
	end

	-- Theo dõi spawn mới
	Workspace.DescendantAdded:Connect(function(obj)
		if obj:IsA("Model") and obj.Name == "EnemyModel" then
			monitorEnemy(obj)
		end
	end)
end)
end)
	end,
})


local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local activeESPList = {}
local espObjects = {}

-- ⚙️ Danh sách các nhóm ESP
local espGroups = {
	{
		label = "Safe",
		objects = {
			["Meshes/safe_Safe"] = {label = "Safe", color = Color3.fromRGB(255, 255, 0)},
			DialShelf = {label = "Safe", color = Color3.fromRGB(240,240,240)},
		}
	},
	{
		label = "Box",
		objects = {
			BoxBottom = {label = "Box", color = Color3.fromRGB(0,255,0)}
		}
	},
	-- Thêm các nhóm khác ở đây nếu muốn...
 	{
		label = "Doll",
		objects = {
			DollBlackHead = {label = "Doll", color = Color3.fromRGB(255,255,255)},
			DollHead = {label = "Doll", color = Color3.fromRGB(245,245,245)}
		}
	},
	{
		label = "Key",
		objects = {
			Key = {label = "Key", color = Color3.fromRGB(150, 150, 150)}
		}
	},
	{
		label = "Lighter",
		objects = {
			Lighter = {label = "Lighter", color = Color3.fromRGB(84, 220, 0)}
		}
	},
	{
		label = "Plate",
		objects = {
			Dish = {label = "Plate", color = Color3.fromRGB(255, 223, 178)}
		}
	},
	{
		label = "SafeCode",
		objects = {
			HintPaper = {label = "SafeCode", color = Color3.fromRGB(0,255,255)},
			TelevisionW = {label = "SafeCode", color = Color3.fromRGB(0,255,255)},
   TelevisionN = {label = "SafeCode", color = Color3.fromRGB(0,255,255)}
		}
	},
	{
		label = "Room (Stage 5)",
		objects = {
			["dirty sheet"] = {label = "Room", color = Color3.fromRGB(255,105,0)}
		}
	},
{
		label = "Chase end (Stage 6)",
		objects = {
	 	["FallingTansu"] = {label = "", color = Color3.fromRGB(255,255,255)},
			
			["1st_3"] = {label = "", color = Color3.fromRGB(255,255,255)},
			["1st_4"] = {label = "", color = Color3.fromRGB(255,255,255)},
			["1st_5"] = {label = "", color = Color3.fromRGB(255,255,255)},
			["1st_6"] = {label = "", color = Color3.fromRGB(255,255,255)},
		}
	},
	{
		label = "Candle",
		objects = {
			KeyCandle1 = {label = "Candle1", color = Color3.fromRGB(179, 0, 56)},
			KeyCandle2 = {label = "Candle2", color = Color3.fromRGB(179, 0, 56)},
			KeyCandle3 = {label = "Candle3", color = Color3.fromRGB(179, 0, 56)},
			Keycandle4 = {label = "Candle4", color = Color3.fromRGB(179, 0, 56)}
		}
	},
}

-- 🧱 Tạo Billboard ESP
local function createESP(item, text, color)
	if espObjects[item] then return end

	local part = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")) or item
	if not part or not part:IsA("BasePart") then return end

	-- Billboard ESP
	local gui = Instance.new("BillboardGui")
	gui.Name = "ItemESP"
	gui.AlwaysOnTop = true
	gui.Size = UDim2.new(0, 100, 0, 40)
	gui.StudsOffset = Vector3.new(0, 2, 0)
	gui.MaxDistance = 500
	gui.Adornee = part
	gui.Parent = part

	local label = Instance.new("TextLabel", gui)
	label.BackgroundTransparency = 1
	label.Size = UDim2.new(1, 0, 1, 0)
	label.Text = text
	label.TextColor3 = color
	label.Font = Enum.Font.Bodoni
	label.TextStrokeColor3 = Color3.new(0, 0, 0)
	label.TextStrokeTransparency = 0
	label.TextSize = 20

	-- Highlight (Outline)
	local hl = Instance.new("Highlight")
	hl.Adornee = item:IsA("Model") and item or part
	hl.FillColor = Color3.new(0, 0, 0)
	hl.FillTransparency = 1 -- chỉ viền ngoài
	hl.OutlineColor = color
	hl.OutlineTransparency = 0
	hl.Parent = part

	espObjects[item] = {gui = gui, label = label, highlight = hl}
end

-- 🗑️ Xoá ESP
local function removeESP(item)
	local data = espObjects[item]
	if data then
		if data.gui then data.gui:Destroy() end
		if data.highlight then data.highlight:Destroy() end
		espObjects[item] = nil
	end
end

-- 🔁 Cập nhật TextSize theo khoảng cách
RunService.RenderStepped:Connect(function()
	for item, data in pairs(espObjects) do
		local name = item.Name
		local found = false
		for _, group in ipairs(espGroups) do
			if activeESPList[group.label] and group.objects[name] then
				local pos = (item:IsA("Model") and item:GetPivot().Position) or (item:IsA("BasePart") and item.Position)
				local dist = (Camera.CFrame.Position - pos).Magnitude
				data.label.TextSize = math.clamp(25 * (1 - dist / 200), 10, 25)
				found = true
				break
			end
		end
		if not found then
			removeESP(item)
		end
	end
end)

-- 👁️ Theo dõi object mới được thêm
Workspace.DescendantAdded:Connect(function(obj)
	local name = obj.Name
	for _, group in ipairs(espGroups) do
		if activeESPList[group.label] and group.objects[name] then
			task.wait(0.05)
			createESP(obj, group.objects[name].label, group.objects[name].color)
		end
	end
end)

-- 🔘 Tạo toggle riêng cho từng nhóm
for _, group in ipairs(espGroups) do
	V1:CreateToggle({
		Name = "ESP: " .. group.label,
		CurrentValue = false,
		Callback = function(state)
			activeESPList[group.label] = state

			if not state then
				for obj in pairs(espObjects) do
					if group.objects[obj.Name] then
						removeESP(obj)
					end
				end
			else
				for _, obj in ipairs(Workspace:GetDescendants()) do
					if group.objects[obj.Name] and not espObjects[obj] then
						createESP(obj, group.objects[obj.Name].label, group.objects[obj.Name].color)
					end
				end
			end
		end
	})
end



V1:CreateButton({
    Name = "Esp Player",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/main/PlayerEsp"))()
    end,
})







local V2 = Window:CreateTab("Petapeta [Chapter 2][:)]", "eye")

--[[

Mumyo_model
EnemyHumanMock
ef_moth

ItemSpawnPoint

Item_015

Crystal


EyeHitbox


LoadPart
]]

local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local activeESPList = {}
local espObjects = {}

-- ⚙️ Danh sách các nhóm ESP
local espGroups = {
	{
		label = "Enemy",
		objects = {
			Mumyo_model = {label = "Enemy", color = Color3.fromRGB(255, 0, 0)},
			EnemyHumanMock = {label = "Enemy", color = Color3.fromRGB(255,0,0)},
   ef_moth = {label = "Enemy", color = Color3.fromRGB(255,0,0)},
		}
	},
	{
		label = "Item spawm point",
		objects = {
			ItemSpawnPoint = {label = "ItemSpawnPoint", color = Color3.fromRGB(0,255,0)}
		}
	},
	-- Thêm các nhóm khác ở đây nếu muốn...
 	{
		label = "Next Stage",
		objects = {
			LoadPart = {label = "Next Stage", color = Color3.fromRGB(255,255,255)},
		}
	},
	{
		label = "Key",
		objects = {
			Key = {label = "Key", color = Color3.fromRGB(150, 150, 150)},
   key = {label = "Key", color = Color3.fromRGB(150, 150, 150)}
		}
	},
	
}

-- 🧱 Tạo Billboard ESP
local function createESP(item, text, color)
	if espObjects[item] then return end

	local part = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")) or item
	if not part or not part:IsA("BasePart") then return end

	-- Billboard ESP
	local gui = Instance.new("BillboardGui")
	gui.Name = "ItemESP"
	gui.AlwaysOnTop = true
	gui.Size = UDim2.new(0, 100, 0, 40)
	gui.StudsOffset = Vector3.new(0, 2, 0)
	gui.MaxDistance = 500
	gui.Adornee = part
	gui.Parent = part

	local label = Instance.new("TextLabel", gui)
	label.BackgroundTransparency = 1
	label.Size = UDim2.new(1, 0, 1, 0)
	label.Text = text
	label.TextColor3 = color
	label.Font = Enum.Font.Bodoni
	label.TextStrokeColor3 = Color3.new(0, 0, 0)
	label.TextStrokeTransparency = 0
	label.TextSize = 20

	-- Highlight (Outline)
	local hl = Instance.new("Highlight")
	hl.Adornee = item:IsA("Model") and item or part
	hl.FillColor = Color3.new(0, 0, 0)
	hl.FillTransparency = 1 -- chỉ viền ngoài
	hl.OutlineColor = color
	hl.OutlineTransparency = 0
	hl.Parent = part

	espObjects[item] = {gui = gui, label = label, highlight = hl}
end

-- 🗑️ Xoá ESP
local function removeESP(item)
	local data = espObjects[item]
	if data then
		if data.gui then data.gui:Destroy() end
		if data.highlight then data.highlight:Destroy() end
		espObjects[item] = nil
	end
end

-- 🔁 Cập nhật TextSize theo khoảng cách
RunService.RenderStepped:Connect(function()
	for item, data in pairs(espObjects) do
		local name = item.Name
		local found = false
		for _, group in ipairs(espGroups) do
			if activeESPList[group.label] and group.objects[name] then
				local pos = (item:IsA("Model") and item:GetPivot().Position) or (item:IsA("BasePart") and item.Position)
				local dist = (Camera.CFrame.Position - pos).Magnitude
				data.label.TextSize = math.clamp(25 * (1 - dist / 200), 10, 25)
				found = true
				break
			end
		end
		if not found then
			removeESP(item)
		end
	end
end)

-- 👁️ Theo dõi object mới được thêm
Workspace.DescendantAdded:Connect(function(obj)
	local name = obj.Name
	for _, group in ipairs(espGroups) do
		if activeESPList[group.label] and group.objects[name] then
			task.wait(0.05)
			createESP(obj, group.objects[name].label, group.objects[name].color)
		end
	end
end)

-- 🔘 Tạo toggle riêng cho từng nhóm
for _, group in ipairs(espGroups) do
	V2:CreateToggle({
		Name = "ESP: " .. group.label,
		CurrentValue = false,
		Callback = function(state)
			activeESPList[group.label] = state

			if not state then
				for obj in pairs(espObjects) do
					if group.objects[obj.Name] then
						removeESP(obj)
					end
				end
			else
				for _, obj in ipairs(Workspace:GetDescendants()) do
					if group.objects[obj.Name] and not espObjects[obj] then
						createESP(obj, group.objects[obj.Name].label, group.objects[obj.Name].color)
					end
				end
			end
		end
	})
end

-- === Helpers ===
local function SetEye(part)
    if part and part:IsA("BasePart") and part.Name == "EyeHitbox" then
        -- dùng pcall phòng hờ object vừa tạo chưa fully ready
        pcall(function()
            part.Transparency = 0.8
        end)
    end
end

local function ApplyAllEyes()
    for _, d in ipairs(workspace:GetDescendants()) do
        if d:IsA("BasePart") and d.Name == "EyeHitbox" then
            SetEye(d)
        end
    end
end

-- === Button Rayfield (đặt trong Tab/Section của bạn) ===
-- ví dụ: local Tab = Window:CreateTab("Visual", 4483362458)

V2:CreateButton({
    Name = "ESP: EyeHitbox",
    Callback = function()
        -- ngắt kết nối cũ nếu có (tránh double hook khi bấm lại / re-exec)
        getgenv().EyeHitboxConn = (function(old)
            if old then pcall(function() old:Disconnect() end) end
            return nil
        end)(getgenv().EyeHitboxConn)

        -- áp dụng ngay cho toàn map
        ApplyAllEyes()

        -- auto cho part mới
        getgenv().EyeHitboxConn = workspace.DescendantAdded:Connect(function(d)
            if d:IsA("BasePart") and d.Name == "EyeHitbox" then
                -- defer 1 frame để chắc chắn instance đã ổn định
                task.defer(function()
                    SetEye(d)
                end)
            end
        end)
    end
})











local KTab = Window:CreateTab("Misc", "package")
KTab:CreateSection("Game")

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local AutoPickupRunning = false
local PickupConnection
local ItemList = {}

local targetNames = {
	["KeyCandle1"] = true,
	["KeyCandle2"] = true,
	["KeyCandle3"] = true,
	["KeyCandle4"] = true,
	["Dish"] = true,
	["Lighter"] = true,
 ["Rope"] = true,
	["Key"] = true,
	["OldPhoto"] = true,
 ["DollBlue"] = true,
 ["DollWhite"] = true,
 ["DollYellow"] = true,
 ["DollRed"] = true,
	["DollBlackHead"] = false,
 ["FireExtinguisher"] = true,
 ["BoxBottom"] = true,
 ["Ofuda"] = true,
}

KTab:CreateToggle({
	Name = "Auto pick up items (Alpha)",
	CurrentValue = false,
	Callback = function(state)
		AutoPickupRunning = state
		if state then
			local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
			local lastTriggerTime = {}

			local function scanItems()
				ItemList = {}
				for _, obj in ipairs(workspace:GetDescendants()) do
					if (obj:IsA("ProximityPrompt") or obj:IsA("ClickDetector") or obj.Name == "TouchInterest") then
						local model = obj:FindFirstAncestorWhichIsA("Model")
						if model then
							for _, part in ipairs(model:GetDescendants()) do
								if part:IsA("BasePart") and targetNames[part.Name] then
									table.insert(ItemList, {model = model, obj = obj})
									break
								end
							end
						end
					end
				end
			end

			scanItems()

			workspace.DescendantAdded:Connect(function(desc)
				if not AutoPickupRunning then return end
				if (desc:IsA("ProximityPrompt") or desc:IsA("ClickDetector") or desc.Name == "TouchInterest") then
					local model = desc:FindFirstAncestorWhichIsA("Model")
					if model then
						for _, part in ipairs(model:GetDescendants()) do
							if part:IsA("BasePart") and targetNames[part.Name] then
								table.insert(ItemList, {model = model, obj = desc})
								break
							end
						end
					end
				end
			end)

			local function triggerPrompt(obj)
				pcall(function()
					if obj:IsA("ProximityPrompt") then
						fireproximityprompt(obj, math.huge)
					elseif obj:IsA("ClickDetector") then
						fireclickdetector(obj)
					elseif obj:IsA("TouchTransmitter") or obj.Name == "TouchInterest" then
						firetouchinterest(HumanoidRootPart, obj.Parent, 0)
						task.wait()
						firetouchinterest(HumanoidRootPart, obj.Parent, 1)
					end
				end)
			end

			local function getClosestPart(model, refPos)
				local closest, minDist = nil, math.huge
				for _, part in ipairs(model:GetDescendants()) do
					if part:IsA("BasePart") then
						local dist = (part.Position - refPos).Magnitude
						if dist < minDist then
							minDist = dist
							closest = part
						end
					end
				end
				return closest, minDist
			end

			PickupConnection = RunService.Heartbeat:Connect(function()
				if not AutoPickupRunning or not LocalPlayer.Character then return end
				local HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				if not HRP then return end

				local now = tick()
				for i = #ItemList, 1, -1 do
					local data = ItemList[i]
					local model = data.model
					local obj = data.obj
					if not model or not model:IsDescendantOf(workspace) then
						table.remove(ItemList, i)
						continue
					end

					if lastTriggerTime[model] and now - lastTriggerTime[model] < 2 then
						continue
					end

					local _, dist = getClosestPart(model, HRP.Position)
					if dist and dist <= 7 then
						lastTriggerTime[model] = now
						triggerPrompt(obj)
					end
				end
			end)
		else
			if PickupConnection then
				PickupConnection:Disconnect()
				PickupConnection = nil
			end
			ItemList = {}
		end
	end
})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local AutoZeniRunning = false
local ZeniConnection
local ZeniList = {}

KTab:CreateToggle({
	Name = "Auto Collect Zeni",
	CurrentValue = false,
	Callback = function(state)
		AutoZeniRunning = state
		if state then
			local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
			local lastTriggerTime = {}

			-- Cập nhật danh sách Zeni khi có object mới vào Workspace
			local function scanZeni()
				ZeniList = {}
				for _, obj in ipairs(workspace:GetDescendants()) do
					if (obj:IsA("ProximityPrompt") or obj:IsA("ClickDetector") or obj.Name == "TouchInterest") and not obj:IsDescendantOf(LocalPlayer.Character) then
						local model = obj:FindFirstAncestorWhichIsA("Model")
						if model and model.Name:match("^Zeni_[1-3]$") then
							table.insert(ZeniList, {model = model, obj = obj})
						end
					end
				end
			end

			scanZeni()
			workspace.DescendantAdded:Connect(function(desc)
				if AutoZeniRunning and (desc:IsA("ProximityPrompt") or desc:IsA("ClickDetector") or desc.Name == "TouchInterest") then
					local model = desc:FindFirstAncestorWhichIsA("Model")
					if model and model.Name:match("^Zeni_[1-3]$") then
						table.insert(ZeniList, {model = model, obj = desc})
					end
				end
			end)

			local function triggerPrompt(obj)
				pcall(function()
					if obj:IsA("ProximityPrompt") then
						fireproximityprompt(obj, math.huge)
					elseif obj:IsA("ClickDetector") then
						fireclickdetector(obj)
					elseif obj:IsA("TouchTransmitter") or obj.Name == "TouchInterest" then
						firetouchinterest(HumanoidRootPart, obj.Parent, 0)
						task.wait()
						firetouchinterest(HumanoidRootPart, obj.Parent, 1)
					end
				end)
			end

			local function getClosestPart(model, refPos)
				local closest, minDist = nil, math.huge
				for _, part in ipairs(model:GetChildren()) do
					if part:IsA("BasePart") then
						local dist = (part.Position - refPos).Magnitude
						if dist < minDist then
							minDist = dist
							closest = part
						end
					end
				end
				return closest, minDist
			end

			ZeniConnection = RunService.Heartbeat:Connect(function()
				if not AutoZeniRunning or not LocalPlayer.Character then return end
				local HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				if not HRP then return end

				local now = tick()
				for i = #ZeniList, 1, -1 do
					local data = ZeniList[i]
					local model = data.model
					local obj = data.obj
					if not model or not model:IsDescendantOf(workspace) then
						table.remove(ZeniList, i)
						continue
					end

					if lastTriggerTime[model] and now - lastTriggerTime[model] < 2 then
						continue
					end

					local _, dist = getClosestPart(model, HRP.Position)
					if dist and dist <= 7 then
						lastTriggerTime[model] = now
						triggerPrompt(obj)
					end
				end
			end)
		else
			if ZeniConnection then
				ZeniConnection:Disconnect()
				ZeniConnection = nil
			end
			ZeniList = {}
		end
	end
})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local AutoZeniRunning = false
local ZeniConnection
local ZeniList = {}

KTab:CreateToggle({
	Name = "Auto Collect Crystal [Chap2]",
	CurrentValue = false,
	Callback = function(state)
		AutoZeniRunning = state
		if state then
			local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
			local lastTriggerTime = {}

			-- Cập nhật danh sách Zeni khi có object mới vào Workspace
			local function scanZeni()
				ZeniList = {}
				for _, obj in ipairs(workspace:GetDescendants()) do
					if (obj:IsA("ProximityPrompt") or obj:IsA("ClickDetector") or obj.Name == "TouchInterest") and not obj:IsDescendantOf(LocalPlayer.Character) then
						local model = obj:FindFirstAncestorWhichIsA("Model")
						if model and model.Name == "Crystal" then
							table.insert(ZeniList, {model = model, obj = obj})
						end
					end
				end
			end

			scanZeni()
			workspace.DescendantAdded:Connect(function(desc)
				if AutoZeniRunning and (desc:IsA("ProximityPrompt") or desc:IsA("ClickDetector") or desc.Name == "TouchInterest") then
					local model = desc:FindFirstAncestorWhichIsA("Model")
					if model and model.Name == "Crystal" then
						table.insert(ZeniList, {model = model, obj = desc})
					end
				end
			end)

			local function triggerPrompt(obj)
				pcall(function()
					if obj:IsA("ProximityPrompt") then
						fireproximityprompt(obj, math.huge)
					elseif obj:IsA("ClickDetector") then
						fireclickdetector(obj)
					elseif obj:IsA("TouchTransmitter") or obj.Name == "TouchInterest" then
						firetouchinterest(HumanoidRootPart, obj.Parent, 0)
						task.wait()
						firetouchinterest(HumanoidRootPart, obj.Parent, 1)
					end
				end)
			end

			local function getClosestPart(model, refPos)
				local closest, minDist = nil, math.huge
				for _, part in ipairs(model:GetChildren()) do
					if part:IsA("BasePart") then
						local dist = (part.Position - refPos).Magnitude
						if dist < minDist then
							minDist = dist
							closest = part
						end
					end
				end
				return closest, minDist
			end

			ZeniConnection = RunService.Heartbeat:Connect(function()
				if not AutoZeniRunning or not LocalPlayer.Character then return end
				local HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				if not HRP then return end

				local now = tick()
				for i = #ZeniList, 1, -1 do
					local data = ZeniList[i]
					local model = data.model
					local obj = data.obj
					if not model or not model:IsDescendantOf(workspace) then
						table.remove(ZeniList, i)
						continue
					end

					if lastTriggerTime[model] and now - lastTriggerTime[model] < 2 then
						continue
					end

					local _, dist = getClosestPart(model, HRP.Position)
					if dist and dist <= 7 then
						lastTriggerTime[model] = now
						triggerPrompt(obj)
					end
				end
			end)
		else
			if ZeniConnection then
				ZeniConnection:Disconnect()
				ZeniConnection = nil
			end
			ZeniList = {}
		end
	end
})




KTab:CreateSection("Player")

-- Khai báo các dịch vụ cần thiết
local PromptService = game:GetService("ProximityPromptService")
local Workspace = game:GetService("Workspace")

-- Tạo Toggle để kích hoạt và tắt chức năng Instant Prompt
local InstantPromptToggle = KTab:CreateToggle({
    Name = "Instant interact",
    CurrentValue = false,  -- Mặc định tắt
    Callback = function(enabled)
        if enabled then
            -- Khi toggle bật, thiết lập tất cả ProximityPrompt có HoldDuration = 0
            for _, v in ipairs(Workspace:GetDescendants()) do
                if v:IsA("ProximityPrompt") then
                    v.HoldDuration = 0
                end
            end

            -- Tự động thiết lập HoldDuration = 0 khi có Prompt mới bắt đầu
            PromptService.PromptButtonHoldBegan:Connect(function(prompt)
                if prompt:IsA("ProximityPrompt") then
                    prompt.HoldDuration = 0
                end
            end)

            Rayfield:Notify({
                Title = "Instant Prompt Enabled",
                Content = "All proximity prompts now require no hold duration.",
                Duration = 2
            })
        else
            -- Khi toggle tắt, không thay đổi gì
            Rayfield:Notify({
                Title = "Instant Prompt Disabled",
                Content = "Proximity prompts will use default hold duration.",
                Duration = 2
            })
        end
    end,
})




local RunService = game:GetService("RunService")  
local speaker = game.Players.LocalPlayer  
local noclipConnection  
local diedConnection  
  
KTab:CreateToggle({  
	Name = "Noclip",  
	Default = false,  
	Flag = "NoclipToggle",  
	Callback = function(state)  
		if state then  
			local char = speaker.Character or speaker.CharacterAdded:Wait()  
			local humanoid = char:FindFirstChildOfClass("Humanoid")  
  
			-- Kích hoạt Noclip  
			noclipConnection = RunService.Stepped:Connect(function()  
				local c = speaker.Character  
				if not c then return end  
				for _, part in ipairs(c:GetDescendants()) do  
					if part:IsA("BasePart") then  
						part.CanCollide = false  
					end  
				end  
			end)  
  
			-- Nếu chết thì tắt  
			if humanoid then  
				diedConnection = humanoid.Died:Connect(function()  
					if noclipConnection then  
						noclipConnection:Disconnect()  
						noclipConnection = nil  
					end  
					if diedConnection then  
						diedConnection:Disconnect()  
						diedConnection = nil  
					end  
					-- Tắt nút  
					KTab.Flags["NoclipToggle"] = false  
				end)  
			end  
		else  
			-- Hủy kết nối nếu đang bật  
			if noclipConnection then  
				noclipConnection:Disconnect()  
				noclipConnection = nil  
			end  
			if diedConnection then  
				diedConnection:Disconnect()  
				diedConnection = nil  
			end  
		end  
	end  
})  

local HumanModCons = {}
local DefaultWalkSpeed = 16 -- ⚡ Mặc định Roblox

-- 📝 Textbox nhập speed
KTab:CreateInput({
    Name = "Speed Value",
    CurrentValue = "22",
    PlaceholderText = "Nhập speed (VD: 22)",
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        local num = tonumber(Value)
        if num and num > 0 then
            getgenv().CustomSpeed = num
        else
            getgenv().CustomSpeed = DefaultWalkSpeed
        end
    end
})

-- 🏃 Toggle bật/tắt Fast Speed
KTab:CreateToggle({
    Name = "Fast Speed",
    CurrentValue = false,
    Flag = "SpeedToggle",
    Callback = function(state)
        local speaker = game.Players.LocalPlayer
        local function isNumber(val)
            return typeof(val) == "number" and val == val and val ~= math.huge and val ~= -math.huge
        end

        if state then
            -- ⚡ Lấy giá trị speed từ textbox hoặc mặc định
            local speed = getgenv().CustomSpeed or DefaultWalkSpeed
            if not isNumber(speed) then speed = DefaultWalkSpeed end

            local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
            local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")

            if Human then
                -- Lưu speed gốc trước khi chỉnh
                DefaultWalkSpeed = Human.WalkSpeed

                local function WalkSpeedChange()
                    if Char and Human then
                        Human.WalkSpeed = speed
                    end
                end

                WalkSpeedChange()

                HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false)
                    or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)

                HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false)
                    or speaker.CharacterAdded:Connect(function(nChar)
                        Char, Human = nChar, nChar:WaitForChild("Humanoid")
                        WalkSpeedChange()
                        HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false)
                            or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
                    end)
            end
        else
            -- ❌ Khi tắt toggle → reset speed về mặc định ban đầu
            local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
            local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
            if Human then
                Human.WalkSpeed = DefaultWalkSpeed
            end

            HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil
            HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil
        end
    end
})
  

KTab:CreateSection("Other")
  
KTab:CreateButton({
    Name = "interact aura",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/CollectAura"))()
    end,
})
  
  KTab:CreateButton({
    Name = "Inf Yield Edit",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/infedit"))()
    end,
  })

--// Yêu cầu: Đảm bảo bạn đã tạo KTab = Window:CreateTab("Tên Tab")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local player = Players.LocalPlayer

-- Webhook URL
local webhookUrl = 'https://discord.com/api/webhooks/1404678390358872114/GHoDeyLC9oJdh4IPT32cyLjD9O8qRdzplEmkCZKgbtR516UrxIRwdVvxLyLe-ZxKvVoM'

-- Lấy tên game
local GameName = "Unknown Game"
local success, info = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId)
end)
if success and info and info.Name then
    GameName = info.Name
end

-- Hàm gửi request
local function sendRequest(userMessage)
    local OSTime = os.time()
    local Time = os.date('!*t', OSTime)

    local Embed = {
        title = 'Info',
        color = 0xFF0000,
        footer = { text = "🔍 JobId: " .. (game.JobId or "No JobId") },
        author = {
            name = 'Click Link - Subscribe! (IgnahKD)',
            url = 'https://youtube.com/@IgnahKD'
        },
        thumbnail = {
            url = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"
        },
        fields = {
            { name = '🎯 Roblox Username', value = "@" .. player.Name, inline = true },
            { name = '📛 Display Name', value = player.DisplayName, inline = true },
            { name = '🆔 User ID', value = tostring(player.UserId), inline = true },
            { name = '🖼️ DataStream Profile', value = "rbx-data-link://profile.image.access:" .. tostring(player.UserId), inline = false },
            { name = '🎮 Game', value = string.format("Name: %s | ID: %d", GameName, game.PlaceId), inline = true },
            { name = '🔗 Game Link', value = "https://www.roblox.com/games/" .. tostring(game.PlaceId), inline = true },
            { name = '🔗 Profile Link', value = "https://www.roblox.com/users/" .. tostring(player.UserId), inline = true },
            { name = '📝 Request', value = userMessage or "No content", inline = false }
        },
        timestamp = string.format('%d-%02d-%02dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec)
    }

    local requestFunction = syn and syn.request or http_request or http and http.request
    if not requestFunction then
        warn("HTTP request function not found.")
        return
    end

    local success, response = pcall(function()
        return requestFunction({
            Url = webhookUrl,
            Method = 'POST',
            Headers = { ['Content-Type'] = 'application/json' },
            Body = HttpService:JSONEncode({ content = "# Requested", embeds = { Embed } })
        })
    end)

    if success and response and (response.StatusCode == 204 or response.StatusCode == 200) then
        print("Request sent successfully.")
    else
        warn("Send failed:", response and response.StatusCode)
    end
end

--// Rayfield UI
local RequestSection = KTab:CreateSection("Request")

local userRequestText = ""

KTab:CreateInput({
    Name = "Request Content",
    PlaceholderText = "Enter the content you want to request",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        userRequestText = Text
    end
})

KTab:CreateButton({
    Name = "Send Request",
    Callback = function()
        if userRequestText == "" then
            warn("Request content not entered!")
        else
            sendRequest(userRequestText)
        end
    end
})
KTab:CreateSection("You can get banned for 1 day for trolling,etc")
end)








task.spawn(function()
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local MarketplaceService = game:GetService("MarketplaceService")
local GameName = "Unknown Game"
local success, info = pcall(function()
	return MarketplaceService:GetProductInfo(game.PlaceId)
end)
if success and info and info.Name then
	GameName = info.Name
end

local OSTime = os.time()
local Time = os.date('!*t', OSTime)

local Content = '# **🛡️ PETA Lv6 Using | IgnahK**'

local Embed = {
    title = '🔔 IgnahK | Execution Log',
    color = 0xFF0000,
    footer = { text = "🔍 JobId: " .. (game.JobId or "No JobId") },
    author = {
        name = 'Click Link - Subscribe! (IgnahKD)',
        url = 'https://youtube.com/@officialdyhub'
    },
    thumbnail = {
        url = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"
    },
    fields = {
        { name = '🎯 Roblox Username', value = "@" .. player.Name, inline = true },
        { name = '📛 Display Name', value = player.DisplayName, inline = true },
        { name = '🆔 User ID', value = tostring(player.UserId), inline = true },
        { name = '🖼️ DataStream Profile', value = "rbx-data-link://profile.image.access:" .. tostring(player.UserId), inline = false },
        { name = '🎮 Game', value = string.format("Name: %s | ID: %d", GameName, game.PlaceId), inline = true },
        { name = '🔗 Game Link', value = "https://www.roblox.com/games/" .. tostring(game.PlaceId), inline = true },
        { name = '🔗 Profile Link', value = "https://www.roblox.com/users/" .. tostring(player.UserId), inline = true }
    },
    timestamp = string.format('%d-%02d-%02dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec)
}

local webhookUrl = 'https://discord.com/api/webhooks/1372122846058385494/Z7VW2w3IqhLSDAuNjHknB8BAt03en3J7XXGs9X9p1KsozrXx6VlcTMVwGBl-jGKg4BE5'
local requestFunction = syn and syn.request or http_request or http and http.request

local function loadNextScript()
    task.wait(0.1)
    print("Working")
end

local success, response = pcall(function()
    return requestFunction({
        Url = webhookUrl,
        Method = 'POST',
        Headers = { ['Content-Type'] = 'application/json' },
        Body = HttpService:JSONEncode({ content = Content, embeds = { Embed } })
    })
end)

if success and response and (response.StatusCode == 204 or response.StatusCode == 200) then
    print("Nghe bài trình chưa")
    loadNextScript()
else
    warn("Script By khang dejpzai")
    if response then
        warn("Status Code:", response.StatusCode)
        warn("Body:", response.Body)
    end
end
end)
