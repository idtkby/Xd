task.spawn(function() -- Made by Khang  
local fov = 150
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Cam = workspace.CurrentCamera
local Player = game:GetService("Players").LocalPlayer

-- Vòng tròn FOV
local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local isAiming = false
local validTargets = {}
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

-- GUI
local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 130, 0, 45)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "AIMBOT: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = ScreenGui

local NPCNameLabel = Instance.new("TextLabel")
NPCNameLabel.Size = UDim2.new(0, 250, 0, 30)
NPCNameLabel.Position = UDim2.new(0, 10, 1, -40)
NPCNameLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
NPCNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NPCNameLabel.Text = "NPC: None"
NPCNameLabel.TextSize = 14
NPCNameLabel.Font = Enum.Font.GothamBold
NPCNameLabel.Parent = ScreenGui

local Sound = Instance.new("Sound", game.SoundService)
Sound.SoundId = "rbxassetid://6026984224"

-- Kiểm tra có Humanoid và không phải người chơi
local function isValidTarget(obj)
	if not obj then return false end

	if obj:IsA("Model") then
		local hum = obj:FindFirstChildOfClass("Humanoid")
		local head = obj:FindFirstChild("Head") or obj:FindFirstChild("HumanoidRootPart")
		return hum and hum.Health > 0 and head and not game.Players:GetPlayerFromCharacter(obj)
	elseif obj:IsA("BasePart") then
		local model = obj:FindFirstAncestorOfClass("Model")
		if model then
			return isValidTarget(model)
		end
	end

	return false
end

local function updateTargets()
	validTargets = {}
	for _, obj in ipairs(workspace:GetDescendants()) do
		if isValidTarget(obj) then
			local model = obj:IsA("Model") and obj or obj:FindFirstAncestorOfClass("Model")
			if model then
				table.insert(validTargets, model)
			end
		end
	end
end

local function updateDrawings()
	FOVring.Position = Cam.ViewportSize / 2
	FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
end

local function predictPos(npc)
	local head = npc:FindFirstChild("Head") or npc:FindFirstChild("HumanoidRootPart")
	return head and head.Position or npc:GetPivot().Position
end

local function getTarget()
	local nearest, minDist = nil, math.huge
	local center = Cam.ViewportSize / 2
	raycastParams.FilterDescendantsInstances = {Player.Character}

	for _, npc in ipairs(validTargets) do
		local pos = predictPos(npc)
		local screenPos, visible = Cam:WorldToViewportPoint(pos)
		if visible and screenPos.Z > 0 then
			local ray = workspace:Raycast(Cam.CFrame.Position, (pos - Cam.CFrame.Position).Unit * 1000, raycastParams)
			if ray and ray.Instance:IsDescendantOf(npc) then
				local dist = (Vector2.new(screenPos.X, screenPos.Y) - center).Magnitude
				if dist < minDist and dist < fov then
					minDist = dist
					nearest = npc
				end
			end
		end
	end
	return nearest
end

local function aim(pos)
	local cf = Cam.CFrame
	local dir = (pos - cf.Position).Unit
	local lerp = cf.LookVector:Lerp(dir, 0.65)
	Cam.CFrame = CFrame.new(cf.Position, cf.Position + lerp)
end

local function adjustTextSize()
	local maxWidth = NPCNameLabel.AbsoluteSize.X
	local actualWidth = NPCNameLabel.TextBounds.X
	if actualWidth > maxWidth then
		local scale = maxWidth / actualWidth
		NPCNameLabel.TextSize = math.max(14 * scale, 10)
	else
		NPCNameLabel.TextSize = 14
	end
end

-- Main loop
local lastUpdate = 0
local UPDATE_INTERVAL = 10

RunService.Heartbeat:Connect(function(dt)
	updateDrawings()
	lastUpdate += dt
	if lastUpdate >= UPDATE_INTERVAL then
		updateTargets()
		lastUpdate = 0
	end

	if isAiming then
		local target = getTarget()
		if target then
			local hum = target:FindFirstChildOfClass("Humanoid")
			if hum then
				aim(predictPos(target))
				NPCNameLabel.Text = "NPC: " .. target.Name .. " | HP: " .. string.format("%.1f", hum.Health)
			else
				NPCNameLabel.Text = "NPC: " .. target.Name .. " | HP: ???"
			end
			adjustTextSize()
		else
			NPCNameLabel.Text = "NPC: None"
			adjustTextSize()
		end
	end
end)

-- Nút bật/tắt
ToggleButton.MouseButton1Click:Connect(function()
	isAiming = not isAiming
	FOVring.Visible = isAiming
	ToggleButton.Text = "AIMBOT: " .. (isAiming and "ON" or "OFF")
	ToggleButton.TextColor3 = isAiming and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
	Sound:Play()
end)

-- Kéo nút
local dragging, dragInput, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	local newX = math.clamp(startPos.X.Offset + delta.X, 0, Cam.ViewportSize.X - ToggleButton.AbsoluteSize.X)
	local newY = math.clamp(startPos.Y.Offset + delta.Y, 0, Cam.ViewportSize.Y - ToggleButton.AbsoluteSize.Y)
	ToggleButton.Position = UDim2.new(startPos.X.Scale, newX, startPos.Y.Scale, newY)
end

ToggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = ToggleButton.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

ToggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
-- Nút XÓA GUI
local DeleteButton = Instance.new("TextButton")
DeleteButton.Size = UDim2.new(0, 30, 0, 30)
DeleteButton.Position = UDim2.new(0, 10, 0, 60)
DeleteButton.Text = "Delete"
DeleteButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
DeleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DeleteButton.Font = Enum.Font.GothamBold
DeleteButton.TextSize = 10
DeleteButton.Parent = ScreenGui

-- Hai nút xác nhận
local SureButton = Instance.new("TextButton")
SureButton.Size = UDim2.new(0, 60, 0, 35)
SureButton.Position = UDim2.new(0, 150, 0, 65)
SureButton.Text = "Sure"
SureButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
SureButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SureButton.Font = Enum.Font.GothamBold
SureButton.TextSize = 14
SureButton.Visible = false
SureButton.Parent = ScreenGui

local NoButton = Instance.new("TextButton")
NoButton.Size = UDim2.new(0, 60, 0, 35)
NoButton.Position = UDim2.new(0, 215, 0, 65)
NoButton.Text = "No"
NoButton.BackgroundColor3 = Color3.fromRGB(180, 0, 0)
NoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoButton.Font = Enum.Font.GothamBold
NoButton.TextSize = 14
NoButton.Visible = false
NoButton.Parent = ScreenGui

DeleteButton.MouseButton1Click:Connect(function()
	SureButton.Visible = true
	NoButton.Visible = true
end)

SureButton.MouseButton1Click:Connect(function()
	FOVring:Remove()
	ScreenGui:Destroy()
	isAiming = false
	script:Destroy() -- Nếu dùng executor thì bỏ dòng này
end)

NoButton.MouseButton1Click:Connect(function()
	SureButton.Visible = false
	NoButton.Visible = false
end)
end)