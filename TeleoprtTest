task.spawn(function()
-- Khai báo các dịch vụ cần thiết
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera

-- Tải và khởi tạo thư viện GUI Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Tạo cửa sổ giao diện chính
local Window = Rayfield:CreateWindow({
    Name = "Khang Hub",
    LoadingTitle = "Loading Hub...",
    LoadingSubtitle = "Please wait",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MyHubFolder",
        FileName = "MyHubConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = false
    },
    KeySystem = false,
})

-- Thông báo đã tải
Rayfield:Notify({
    Title = "Welcome!",
    Content = "Script Loaded",
    Duration = 2
})
local HbTab = Window:CreateTab("Game", "map")

HbTab:CreateSection("Grow a Garden")
HbTab:CreateButton({
   Name = "Staging Game",
   Callback = function()
      local gameId = 91867617264223
      game:GetService("TeleportService"):Teleport(gameId)
   end
})

HbTab:CreateSection("7 day to live")
HbTab:CreateButton({
   Name = "sea",
   Callback = function()
      local gameId = 77970919775750
      game:GetService("TeleportService"):Teleport(gameId)
   end
})
HbTab:CreateButton({
   Name = "moon",
   Callback = function()
      local gameId = 135516941692071
      game:GetService("TeleportService"):Teleport(gameId)
   end
})


HbTab:CreateSection("Server")
HbTab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local HttpService = game:GetService("HttpService")
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        local PlaceId = game.PlaceId
        local JobId = game.JobId

        local servers = {}
        local success, result = pcall(function()
            local req = game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
            return HttpService:JSONDecode(req)
        end)

        if success and result and result.data then
            for _, v in next, result.data do
                if tonumber(v.playing) < tonumber(v.maxPlayers) and v.id ~= JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
        else
            Rayfield:Notify({
                Title = "Serverhop",
                Content = "Không tìm thấy server phù hợp.",
                Duration = 3
            })
        end
    end
})


HbTab:CreateButton({
    Name = "Low Server",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local HttpService = game:GetService("HttpService")
        local Players = game:GetService("Players")
        local PlaceId = game.PlaceId

        local function getLowestPlayerServer()
            local servers = {}
            local cursor = ""

            repeat
                local url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor
                local success, response = pcall(function()
                    return HttpService:JSONDecode(game:HttpGet(url))
                end)

                if success and response and response.data then
                    for _, server in ipairs(response.data) do
                        if server.playing < server.maxPlayers and server.id ~= game.JobId then
                            table.insert(servers, server)
                        end
                    end
                    cursor = response.nextPageCursor or ""
                else
                    cursor = ""
                end

                task.wait(1)
            until cursor == ""

            table.sort(servers, function(a, b)
                return a.playing < b.playing
            end)

            return #servers > 0 and servers[1].id or nil
        end

        local serverId = getLowestPlayerServer()
        if serverId then
            TeleportService:TeleportToPlaceInstance(PlaceId, serverId, Players.LocalPlayer)
        else
            Rayfield:Notify({
                Title = "Low Server",
                Content = "Không tìm thấy server ít người.",
                Duration = 3
            })
        end
    end
})

HbTab:CreateButton({
    Name = "Rejoin",
    Callback = function()
        local Players = game:GetService("Players")
        local TeleportService = game:GetService("TeleportService")
        local PlaceId = game.PlaceId
        local JobId = game.JobId

        if #Players:GetPlayers() <= 1 then
            Players.LocalPlayer:Kick("\nRejoining...")
            task.wait(1)
            TeleportService:Teleport(PlaceId, Players.LocalPlayer)
        else
            TeleportService:TeleportToPlaceInstance(PlaceId, JobId, Players.LocalPlayer)
        end
    end
})

end)