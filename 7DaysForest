-- Kiểm tra ID game
if game.PlaceId ~= 121308443347459 then
    return warn("Script only works in the specified game (ID: 121308443347459){7Days To Live (Forest)}")
end

-- Thông báo khi đúng ID game
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "✓ Game Check Passed",
    Text = "Script is now executing...",
    Duration = 5
})

task.wait(3) -- Đợi 3s trước khi thực thi 

task.spawn(function()
-- Khai báo các dịch vụ cần thiết
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera

-- Tải và khởi tạo thư viện GUI Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Tạo cửa sổ giao diện chính
local Window = Rayfield:CreateWindow({
    Name = "Script By Khang",
    LoadingTitle = "Loading Hub...",
    LoadingSubtitle = "Please wait",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MyHubFolder",
        FileName = "MyHubConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = false
    },
    KeySystem = false,
})

-- Thông báo đã tải
Rayfield:Notify({
    Title = "Welcome!",
    Content = "Script Loaded",
    Duration = 2
})

-- Tạo Tab Main
local MTab = Window:CreateTab("Main", "home")

MTab:CreateSection("Main")

MTab:CreateButton({
    Name = "Esp Npc",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/7DayToLive/refs/heads/main/Esp%20Npc"))()
    end,
})
  
  MTab:CreateButton({
    Name = "Aimbot (Some npc may not work)",
    Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/Aimbot%20npc%207%20days"))()
    end,
  })

local toggleRunning = false
local connection

MTab:CreateToggle({
	Name = "GetBerry [INF]",
	CurrentValue = false,
	Flag = "GetBerryINF",
	Callback = function(state)
		toggleRunning = state

		local lp = game:GetService("Players").LocalPlayer
		local RunService = game:GetService("RunService")

		if connection then
			connection:Disconnect()
			connection = nil
		end

		local char = lp.Character or lp.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")
		local hum = char:FindFirstChildOfClass("Humanoid")
		if not (hrp and hum) then return end

		local originalCFrame = hrp.CFrame

		if not state then
			char:PivotTo(originalCFrame)
			return
		end

		connection = RunService.Heartbeat:Connect(function()
			if not toggleRunning then return end

			char = lp.Character or lp.CharacterAdded:Wait()
			hrp = char:FindFirstChild("HumanoidRootPart")
			hum = char:FindFirstChildOfClass("Humanoid")
			if not (hrp and hum) then return end

			local nearestBerry, shortestDist = nil, math.huge
			for _, obj in ipairs(workspace:GetDescendants()) do
				if obj:IsA("Model") and obj.Name:lower() == "berry" then
					local part = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
					if part then
						local dist = (hrp.Position - part.Position).Magnitude
						if dist < shortestDist then
							nearestBerry = obj
							shortestDist = dist
						end
					end
				end
			end

			if nearestBerry then
				local part = nearestBerry.PrimaryPart or nearestBerry:FindFirstChildWhichIsA("BasePart")
				if not nearestBerry.PrimaryPart and part then
					pcall(function()
						nearestBerry.PrimaryPart = part
					end)
				end

				local prompt = nearestBerry:FindFirstChildWhichIsA("ProximityPrompt", true)
					or nearestBerry:FindFirstChildWhichIsA("ClickDetector", true)
					or nearestBerry:FindFirstChild("TouchInterest", true)

				if prompt and part then
					char:PivotTo(part.CFrame + Vector3.new(0, 3.5, 0))
					task.wait(0.25)

					for i = 1, 50 do
						pcall(function()
							if prompt:IsA("ProximityPrompt") then
								fireproximityprompt(prompt)
							elseif prompt:IsA("ClickDetector") then
								fireclickdetector(prompt)
							elseif prompt.Name == "TouchInterest" then
								firetouchinterest(hrp, part, 0)
								task.wait()
								firetouchinterest(hrp, part, 1)
							end
						end)
						task.wait(0.05)
					end

					task.wait(0.2)
					char:PivotTo(originalCFrame)
					task.wait(1) -- Chờ 1 giây trước lần lặp kế tiếp
				end
			else
				task.wait(1)
			end
		end)
	end
})

local autoScrapRunning = false
local autoScrapConnection
local savedCFrame = nil

MTab:CreateToggle({
	Name = "Auto Scrap",
	CurrentValue = false,
	Flag = "AutoScrapToggle",
	Callback = function(state)
		local lp = game:GetService("Players").LocalPlayer
		local RunService = game:GetService("RunService")

		-- Tắt toggle thủ công
		if not state then
			autoScrapRunning = false
			if autoScrapConnection then
				autoScrapConnection:Disconnect()
				autoScrapConnection = nil
			end

			Rayfield:Notify({
				Title = "Auto Scrap",
				Content = "Auto Scraps disabled",
				Duration = 3
			})

			task.delay(1, function()
				local char = lp.Character or lp.CharacterAdded:Wait()
				local hrp = char:FindFirstChild("HumanoidRootPart")
				if hrp and savedCFrame then
					char:PivotTo(savedCFrame)
					Rayfield:Notify({
						Title = "Auto Scrap",
						Content = "Teleport successful ",
						Duration = 2
					})
				end
			end)

			return
		end

		-- Bật toggle
		autoScrapRunning = true
		local char = lp.Character or lp.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")
		if not hrp then return end
		savedCFrame = hrp.CFrame

		Rayfield:Notify({
			Title = "Auto Scrap",
			Content = "Searching and collecting Scrap...",
			Duration = 3
		})

		autoScrapConnection = RunService.Heartbeat:Connect(function()
			if not autoScrapRunning then return end

			local char = lp.Character or lp.CharacterAdded:Wait()
			local hrp = char:FindFirstChild("HumanoidRootPart")
			if not hrp then return end

			local foundScrap = false

			for _, obj in ipairs(workspace:GetDescendants()) do
				if not autoScrapRunning then break end
				if obj:IsA("Model") and obj.Name:lower() == "scrap" then
					local part = obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")
					local prompt = obj:FindFirstChildWhichIsA("ProximityPrompt", true)
						or obj:FindFirstChildWhichIsA("ClickDetector", true)
						or obj:FindFirstChild("TouchInterest", true)

					if part then
						foundScrap = true
						char:PivotTo(part.CFrame + Vector3.new(0, 2, 0))
						task.wait(0.2)

						if not prompt then
							autoScrapRunning = false
							if autoScrapConnection then
								autoScrapConnection:Disconnect()
								autoScrapConnection = nil
							end

							Rayfield:Notify({
								Title = "Auto Scrap",
								Content = "Collected all Scrap, preparing TP",
								Duration = 3
							})

							task.delay(1, function()
								local char = lp.Character or lp.CharacterAdded:Wait()
								local hrp = char:FindFirstChild("HumanoidRootPart")
								if hrp and savedCFrame then
									char:PivotTo(savedCFrame)
									Rayfield:Notify({
										Title = "Auto Scrap",
										Content = "Teleported successfully",
										Duration = 2
									})
								end
							end)
							break
						end

						pcall(function()
							if prompt:IsA("ProximityPrompt") then
								fireproximityprompt(prompt)
							elseif prompt:IsA("ClickDetector") then
								fireclickdetector(prompt)
							elseif prompt.Name == "TouchInterest" then
								firetouchinterest(hrp, part, 0)
								task.wait()
								firetouchinterest(hrp, part, 1)
							end
						end)

						task.wait(0.1)
					end
				end
			end

			if not foundScrap then
				autoScrapRunning = false
				if autoScrapConnection then
					autoScrapConnection:Disconnect()
					autoScrapConnection = nil
				end

				Rayfield:Notify({
					Title = "Auto Scrap",
					Content = "Scrap has been collected, prepare TP",
					Duration = 3
				})

				task.delay(1, function()
					local char = lp.Character or lp.CharacterAdded:Wait()
					local hrp = char:FindFirstChild("HumanoidRootPart")
					if hrp and savedCFrame then
						char:PivotTo(savedCFrame)
						Rayfield:Notify({
							Title = "Auto Scrap",
							Content = "Teleport successful",
							Duration = 2
						})
					end
				end)
			end
		end)
	end
})

local TeleportTab = Window:CreateTab("Teleport", "map")
TeleportTab:CreateSection("Main Location")

local locations = {
    {Name = "Home", Position = Vector3.new(60.99, 48.58, 417.10)},
    {Name = "Balcony", Position = Vector3.new(37.34, 52.72, 420.62)},
    {Name = "River", Position = Vector3.new(-227.99, -0.84, 341.59)},
    {Name = "Skeleton", Position = Vector3.new(145.43, 12.63, 234.22)},
    {Name = "Turret1", Position = Vector3.new(-110.91, 37.91, 352.01)},
    {Name = "Turret2", Position = Vector3.new(-5.95, 26.77, 258.23)},
    {Name = "Turret3", Position = Vector3.new(117.83, 34.97, 336.75)},
    {Name = "Turret4", Position = Vector3.new(95.04, 34.41, 491.53)},
}

for _, loc in ipairs(locations) do
    TeleportTab:CreateButton({
        Name = "Go to " .. loc.Name,
        Callback = function()
            local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(loc.Position)
            end
        end
    })
end

local CombatTab = Window:CreateTab("Combat", "skull")

local attackRange = 300
local aimPart = "Head"
local killauraEnabled = false

-- Slider chỉnh khoảng cách tấn công
CombatTab:CreateSlider({
    Name = "Attack Range",
    Range = {1, 1000},
    Increment = 1,
    CurrentValue = attackRange,
    Callback = function(value)
        attackRange = value
    end,
})

-- Dropdown chọn bộ phận ngắm
CombatTab:CreateDropdown({
    Name = "Aim Target",
    Options = {"Head", "HumanoidRootPart"},
    CurrentOption = aimPart,
    Callback = function(option)
        aimPart = option
    end,
})

-- Toggle bật tắt Killaura
CombatTab:CreateToggle({
    Name = "Killaura",
    CurrentValue = false,
    Callback = function(state)
        killauraEnabled = state
    end,
})

-- Script KillAura (tự động)
local shootRemote = game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("shoot")
local camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

local function getTargetPart(npc)
    local isSpecial = npc.Name:lower() == "stalker" or npc.Name:lower() == "pig_monster"
    if isSpecial and npc.PrimaryPart then
        return npc.PrimaryPart
    end
    return npc:FindFirstChild(aimPart)
end

local function createCFrame(targetPos)
    local origin = camera.CFrame.Position
    local look = CFrame.lookAt(origin, targetPos)
    local reverse = CFrame.lookAt(targetPos, origin)
    return {look, reverse}
end

task.spawn(function()
    while true do
        task.wait(0.15)
        if not killauraEnabled then continue end

        for _, npc in ipairs(workspace:GetChildren()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0 and not Players:GetPlayerFromCharacter(npc) then
                local part = getTargetPart(npc)
                if part and (part.Position - camera.CFrame.Position).Magnitude <= attackRange then
                    local args = createCFrame(part.Position + Vector3.new(0, 1.2, 0))
                    shootRemote:FireServer(unpack(args))
                end
            end
        end
    end
end)

local KTab = Window:CreateTab("Misc", "package")
  
KTab:CreateButton({
    Name = "Collect Aura",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/CollectAura"))()
    end,
})
  
  KTab:CreateButton({
    Name = "Inf Yield Edit",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/infedit"))()
    end,
  })

KTab:CreateButton({
     Name = "Herkle Hub",
     Callback = function()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/decryp1/Herkle-Hub/refs/heads/main/game%20redirect"))()
     end,
})

KTab:CreateButton({
    Name = "Players ESP",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/PlayerEsp"))()
    end,
})

KTab:CreateButton({
    Name = "Enable Chat",
    Callback = function()
        local StarterGui = game:GetService("StarterGui")
local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Bật lại Chat GUI nếu bị tắt
pcall(function()
    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
end)

-- Bật lại ChatWindow nếu bị ẩn
local function enableChatWindow()
    local config = TextChatService:FindFirstChild("ChatWindowConfiguration")
    if config then
        config.Enabled = true
    end
end

-- Kiểm tra định kỳ để đảm bảo không bị tắt lại
RunService.RenderStepped:Connect(function()
    if not StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat) then
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
    end
    enableChatWindow()
end)
    end,
})
  
end)
