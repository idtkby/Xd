task.spawn(function()  
-- Khai bÃ¡o cÃ¡c dá»‹ch vá»¥ cáº§n thiáº¿t  
COREGUI = cloneref(game:GetService("CoreGui"))  
Players = cloneref(game:GetService("Players"))  
UserInputService = cloneref(game:GetService("UserInputService"))  
TweenService = cloneref(game:GetService("TweenService"))  
HttpService = cloneref(game:GetService("HttpService"))  
MarketplaceService = cloneref(game:GetService("MarketplaceService"))  
RunService = cloneref(game:GetService("RunService"))  
TeleportService = cloneref(game:GetService("TeleportService"))  
StarterGui = cloneref(game:GetService("StarterGui"))  
GuiService = cloneref(game:GetService("GuiService"))  
Lighting = cloneref(game:GetService("Lighting"))  
ContextActionService = cloneref(game:GetService("ContextActionService"))  
ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))  
GroupService = cloneref(game:GetService("GroupService"))  
PathService = cloneref(game:GetService("PathfindingService"))  
SoundService = cloneref(game:GetService("SoundService"))  
Teams = cloneref(game:GetService("Teams"))  
StarterPlayer = cloneref(game:GetService("StarterPlayer"))  
InsertService = cloneref(game:GetService("InsertService"))  
ChatService = cloneref(game:GetService("Chat"))  
ProximityPromptService = cloneref(game:GetService("ProximityPromptService"))  
ContentProvider = cloneref(game:GetService("ContentProvider"))  
StatsService = cloneref(game:GetService("Stats"))  
MaterialService = cloneref(game:GetService("MaterialService"))  
AvatarEditorService = cloneref(game:GetService("AvatarEditorService"))  
TextService = cloneref(game:GetService("TextService"))  
TextChatService = cloneref(game:GetService("TextChatService"))  
CaptureService = cloneref(game:GetService("CaptureService"))  
VoiceChatService = cloneref(game:GetService("VoiceChatService"))  
  
-- Táº£i vÃ  khá»Ÿi táº¡o thÆ° viá»‡n GUI Rayfield  
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()  
  
-- Táº¡o cá»­a sá»• giao diá»‡n chÃ­nh  
local Window = Rayfield:CreateWindow({  
    Name = "Script by IgnahK",  
    LoadingTitle = "Loading Script...",  
    LoadingSubtitle = "Please wait",  
    ConfigurationSaving = {  
        Enabled = true,  
        FolderName = "MyHubFolder",  
        FileName = "MyHubConfig"  
    },  
    Discord = {  
        Enabled = false,  
        Invite = "",  
        RememberJoins = false  
    },  
    KeySystem = false,  
})  
  
-- ThÃ´ng bÃ¡o Ä‘Ã£ táº£i  
Rayfield:Notify({  
    Title = "Welcome!",  
    Content = "Script Loaded",  
    Duration = 2  
})  
  
-- Táº¡o Tab Teleport  
local KTab = Window:CreateTab("Misc", 4483362458)  
local UserInputService = game:GetService("UserInputService")  
local Players = game:GetService("Players")  
local speaker = Players.LocalPlayer  
local flyjump  
  
KTab:CreateToggle({  
	Name = "Inf Jump",  
	CurrentValue = false,  
	Flag = "InfJumpToggle",  
	Callback = function(state)  
		if flyjump then  
			flyjump:Disconnect()  
			flyjump = nil  
		end  
  
		if state then  
			flyjump = UserInputService.JumpRequest:Connect(function()  
				local humanoid = speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid")  
				if humanoid then  
					humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  
				end  
			end)  
		end  
	end  
})  
  
-- Khai bÃ¡o cÃ¡c dá»‹ch vá»¥ cáº§n thiáº¿t  
local PromptService = game:GetService("ProximityPromptService")  
local Workspace = game:GetService("Workspace")  
  
-- Táº¡o Toggle Ä‘á»ƒ kÃ­ch hoáº¡t vÃ  táº¯t chá»©c nÄƒng Instant Prompt  
local InstantPromptToggle = KTab:CreateToggle({  
    Name = "Instant interact",  
    CurrentValue = false,  -- Máº·c Ä‘á»‹nh táº¯t  
    Callback = function(enabled)  
        if enabled then  
            -- Khi toggle báº­t, thiáº¿t láº­p táº¥t cáº£ ProximityPrompt cÃ³ HoldDuration = 0  
            for _, v in ipairs(Workspace:GetDescendants()) do  
                if v:IsA("ProximityPrompt") then  
                    v.HoldDuration = 0  
                end  
            end  
              
            -- Tá»± Ä‘á»™ng thiáº¿t láº­p HoldDuration = 0 khi cÃ³ Prompt má»›i báº¯t Ä‘áº§u  
            PromptService.PromptButtonHoldBegan:Connect(function(prompt)  
                if prompt:IsA("ProximityPrompt") then  
                    prompt.HoldDuration = 0  
                end  
            end)  
  
            Rayfield:Notify({  
                Title = "Instant Prompt Enabled",  
                Content = "All proximity prompts now require no hold duration.",  
                Duration = 2  
            })  
        else  
            -- Khi toggle táº¯t, khÃ´ng thay Ä‘á»•i gÃ¬  
            Rayfield:Notify({  
                Title = "Instant Prompt Disabled",  
                Content = "Proximity prompts will use default hold duration.",  
                Duration = 2  
            })  
        end  
    end,  
})  
  
local RunService = game:GetService("RunService")  
local speaker = game.Players.LocalPlayer  
local noclipConnection  
local diedConnection  
  
KTab:CreateToggle({  
	Name = "Noclip",  
	Default = false,  
	Flag = "NoclipToggle",  
	Callback = function(state)  
		if state then  
			local char = speaker.Character or speaker.CharacterAdded:Wait()  
			local humanoid = char:FindFirstChildOfClass("Humanoid")  
  
			-- KÃ­ch hoáº¡t Noclip  
			noclipConnection = RunService.Stepped:Connect(function()  
				local c = speaker.Character  
				if not c then return end  
				for _, part in ipairs(c:GetDescendants()) do  
					if part:IsA("BasePart") then  
						part.CanCollide = false  
					end  
				end  
			end)  
  
			-- Náº¿u cháº¿t thÃ¬ táº¯t  
			if humanoid then  
				diedConnection = humanoid.Died:Connect(function()  
					if noclipConnection then  
						noclipConnection:Disconnect()  
						noclipConnection = nil  
					end  
					if diedConnection then  
						diedConnection:Disconnect()  
						diedConnection = nil  
					end  
					-- Táº¯t nÃºt  
					KTab.Flags["NoclipToggle"] = false  
				end)  
			end  
		else  
			-- Há»§y káº¿t ná»‘i náº¿u Ä‘ang báº­t  
			if noclipConnection then  
				noclipConnection:Disconnect()  
				noclipConnection = nil  
			end  
			if diedConnection then  
				diedConnection:Disconnect()  
				diedConnection = nil  
			end  
		end  
	end  
})  
  
local Lighting = game:GetService("Lighting")  
local RunService = game:GetService("RunService")  
  
local brightLoop = nil  
local oldLighting = {}  
  
KTab:CreateToggle({  
    Name = "Full Bright",  
    CurrentValue = false,  
    Callback = function(state)  
        if state then  
            -- ðŸŒ• LÆ°u thÃ´ng sá»‘ gá»‘c  
            oldLighting = {  
                Brightness = Lighting.Brightness,  
                ClockTime = Lighting.ClockTime,  
                FogEnd = Lighting.FogEnd,  
                GlobalShadows = Lighting.GlobalShadows,  
                OutdoorAmbient = Lighting.OutdoorAmbient,  
            }  
  
            -- ðŸŒž Báº­t Ã¡nh sÃ¡ng  
            local function brightFunc()  
                Lighting.Brightness = 2  
                Lighting.ClockTime = 14  
                Lighting.FogEnd = 100000  
                Lighting.GlobalShadows = false  
                Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)  
            end  
  
            brightFunc()  
            brightLoop = RunService.RenderStepped:Connect(brightFunc)  
        else  
            -- ðŸŒ‘ Táº¯t Ã¡nh sÃ¡ng vÃ  khÃ´i phá»¥c láº¡i  
            if brightLoop then brightLoop:Disconnect() end  
  
            if oldLighting then  
                pcall(function()  
                    Lighting.Brightness = oldLighting.Brightness  
                    Lighting.ClockTime = oldLighting.ClockTime  
                    Lighting.FogEnd = oldLighting.FogEnd  
                    Lighting.GlobalShadows = oldLighting.GlobalShadows  
                    Lighting.OutdoorAmbient = oldLighting.OutdoorAmbient  
                end)  
            end  
        end  
    end  
})  
  
  
KTab:CreateSection("Other")  
  
KTab:CreateButton({  
    Name = "interact aura",  
    Callback = function()  
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/CollectAura"))()  
    end,  
})  
  
  KTab:CreateButton({  
    Name = "Inf Yield Edit",  
    Callback = function()  
        loadstring(game:HttpGet("https://raw.githubusercontent.com/idtkby/Xd/refs/heads/main/infedit"))()  
    end,  
  })  
  
end)  
