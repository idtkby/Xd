task.spawn(function()
local autoAttackToggle = false
local attackRange = 15
local validTools = { "Shovel", "Tomahawk", "Cavalry Sword", "Pickaxe", "Jade Sword", "Vampire Knife" }

-- T·∫°o ScreenGui n·∫øu ch∆∞a c√≥
local player = game.Players.LocalPlayer
local screenGui = player:WaitForChild("PlayerGui"):FindFirstChild("ScreenGui")

if not screenGui then
screenGui = Instance.new("ScreenGui")
screenGui.Name = "ScreenGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")
end

-- T·∫°o n√∫t b·∫≠t/t·∫Øt
local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 100, 0, 50)
button.Position = UDim2.new(0.9, 0, -0.068, 0)
button.Text = "SwitchAttack: OFF"
button.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
button.TextColor3 = Color3.new(1, 1, 1)
button.Parent = screenGui

-- Ki·ªÉm tra c√≥ tool h·ª£p l·ªá trong balo kh√¥ng
local function hasValidTool()
local backpack = player:WaitForChild("Backpack")
for _, tool in ipairs(backpack:GetChildren()) do
if tool:IsA("Tool") and table.find(validTools, tool.Name) then
return tool
end
end
return nil
end

-- T√¨m mod trong ph·∫°m vi, kh√¥ng b·ªã ragdoll v√† m√°u l·ªõn h∆°n 0
local function findNearbyMod()
for _, mod in ipairs(workspace:GetDescendants()) do
if mod:IsA("Model") and (mod.Name == "Runner" or mod.Name == "Walker" or mod.Name == "ZombieSheriff" or mod.Name == "ArmoredZombie" or mod.Name == "ZombieSwordOfficer" or mod.Name == "ZombieRevolverSoldierOfficial" or mod.Name == "ZombieRevolverSoldier" or mod.Name == "RunnerSoldier" or mod.Name == "Wolf" or mod.Name == "Banker" or mod.Name == "Werewolf" or mod.Name == "ShotgunOutlaw" or mod.Name == "RevolverOutlaw" or mod.Name == "RifleOutlaw" or mod.Name == "Vampire") then
local modPrimaryPart = mod:FindFirstChild("HumanoidRootPart") or mod.PrimaryPart
local humanoid = mod:FindFirstChild("Humanoid")
local playerRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

if humanoid and humanoid.Health > 0 and modPrimaryPart and playerRootPart then
local distance = (modPrimaryPart.Position - playerRootPart.Position).magnitude

-- Ki·ªÉm tra tr·∫°ng th√°i ragdoll ch√≠nh x√°c    
        if distance <= attackRange and humanoid:GetState() ~= Enum.HumanoidStateType.Physics then    
            return true    
        end    
    end    
end

end
return false

end

-- H√†m auto attack
local function autoAttack()
while autoAttackToggle do
local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
local tool = hasValidTool()

if findNearbyMod() and humanoid and tool then
humanoid:EquipTool(tool)  -- Trang b·ªã l·∫°i tool ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng b·ªã l·ªói
tool:Activate()           -- K√≠ch ho·∫°t tool ƒë·ªÉ t·∫•n c√¥ng
end

task.wait(0.1)

end

end

-- X·ª≠ l√Ω khi nh·∫•n n√∫t
button.MouseButton1Click:Connect(function()
autoAttackToggle = not autoAttackToggle
button.Text = autoAttackToggle and "SwitchAttack: ON" or "SwitchAttack: OFF"

if autoAttackToggle then
autoAttack()
end

end)
end)

task.spawn(function()
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

local modsToTrack = {
"RifleOutlaw",
"ShotgunOutlaw",
"RevolverOutlaw"
}
local unicornName = "Unicorn"

local espObjects = {}
local notifiedOutlaw = false
local notifiedUnicorn = false

-- G·ª≠i th√¥ng b√°o Roblox
local function sendNotification(title, text, duration)
StarterGui:SetCore("SendNotification", {
Title = title;
Text = text;
Duration = duration or 5;
})
end

-- T·∫°o ESP
local function createESP(mod, labelName)
local billboard = Instance.new("BillboardGui")
billboard.Name = "ESP"
billboard.Size = UDim2.new(0, 100, 0, 30)
billboard.StudsOffset = Vector3.new(0, 4, 0)
billboard.AlwaysOnTop = true
billboard.MaxDistance = math.huge

local label = Instance.new("TextLabel")  
label.Size = UDim2.new(1, 0, 1, 0)  
label.BackgroundTransparency = 1  
label.Text = labelName  
label.TextColor3 = Color3.new(0.5, 0.5, 0.5)  
label.TextStrokeColor3 = Color3.new(1, 1, 1)  
label.TextStrokeTransparency = 0  
label.TextSize = 10 -- K√≠ch th∆∞·ªõc ch·ªØ c·ªë ƒë·ªãnh l√† 10  
label.Font = Enum.Font.SourceSansBold  
label.Parent = billboard  

billboard.Parent = mod:FindFirstChild("Head") or mod:FindFirstChild("HumanoidRootPart") or mod.PrimaryPart  
espObjects[mod] = billboard

end

-- X√≥a ESP n·∫øu mod bi·∫øn m·∫•t ho·∫∑c m√°u b·∫±ng 0
local function removeESP(mod)
if espObjects[mod] then
espObjects[mod]:Destroy()
espObjects[mod] = nil
end
end

-- Li√™n t·ª•c ki·ªÉm tra v√† c·∫≠p nh·∫≠t ESP
RunService.Heartbeat:Connect(function()
local outlawFound = false
local unicornFound = false

for _, mod in ipairs(workspace:GetDescendants()) do  
    if mod:IsA("Model") then  
        local humanoid = mod:FindFirstChild("Humanoid")  

        -- Ki·ªÉm tra Outlaw  
        if table.find(modsToTrack, mod.Name) and humanoid and humanoid.Health > 0 then  
            outlawFound = true  
            if not espObjects[mod] then  
                createESP(mod, "Outlaw")  
            end  
          
        -- Ki·ªÉm tra Unicorn  
        elseif mod.Name == unicornName and humanoid and humanoid.Health > 0 then  
            unicornFound = true  
            if not espObjects[mod] then  
                createESP(mod, "Unicorn")  
            end  
          
        -- X√≥a ESP n·∫øu mod kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ ch·∫øt  
        elseif espObjects[mod] then  
            removeESP(mod)  
        end  
    end  
end  

-- Th√¥ng b√°o khi ph√°t hi·ªán Outlaw  
if cowboyFound and not notifiedOutlaw then  
    sendNotification("Th√¥ng b√°o", "‚ö†Ô∏è Outlaw has spawn!", 8)  
    notifiedCowboy = true  
elseif not cowboyFound then  
    notifiedCowboy = false  
end  

-- Th√¥ng b√°o khi ph√°t hi·ªán Unicorn  
if unicornFound and not notifiedUnicorn then  
    sendNotification("Th√¥ng b√°o", "‚ùó Unicorn has SPAWN!!", 8)  
    notifiedUnicorn = true  
elseif not unicornFound then  
    notifiedUnicorn = false  
end

end)
end)

task.spawn(function()
local espColor = Color3.fromRGB(255, 255, 255) -- M√†u ch·ªØ tr·∫Øng
local outlineColor = Color3.fromRGB(128, 128, 128) -- Vi·ªÅn x√°m
local highlightColor = Color3.fromRGB(255, 223, 0) -- M√†u v√†ng cho highlight

-- T·∫°o ESP
local function createESP(item)
    -- T·∫°o BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BondESP"
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.MaxDistance = math.huge  -- Hi·ªÉn th·ªã ·ªü kho·∫£ng c√°ch v√¥ h·∫°n
    billboard.Parent = item

    -- T·∫°o TextLabel
    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboard
    textLabel.Text = "üí∞ BOND üí∞"
    textLabel.TextColor3 = espColor
    textLabel.TextStrokeColor3 = outlineColor
    textLabel.TextStrokeTransparency = 0
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.TextSize = 10

    -- T·∫°o Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "BondHighlight"
    highlight.FillColor = highlightColor
    highlight.FillTransparency = 0.5 -- ƒê·ªô trong su·ªët v·ª´a ƒë·ªß
    highlight.OutlineColor = highlightColor
    highlight.OutlineTransparency = 0
    highlight.Parent = item
end

-- Ki·ªÉm tra v√† th√™m ESP + Highlight
local function checkForBonds()
    for _, item in ipairs(workspace:GetDescendants()) do
        if item:IsA("Model") and item.Name == "Bond" and not item:FindFirstChild("BondESP") then
            createESP(item)
        end
    end
end

-- L·∫Øng nghe khi Bond m·ªõi xu·∫•t hi·ªán
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Model") and descendant.Name == "Bond" then
        createESP(descendant)
    end
end)

-- Kh·ªüi ƒë·ªông ki·ªÉm tra ban ƒë·∫ßu
checkForBonds()
end)

task.spawn(function() -- Made by yee_kunkun (enhanced by H·ªó tr·ª£ üî®3)
local fov = 150
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Cam = workspace.CurrentCamera
local Player = game:GetService("Players").LocalPlayer

-- V√≤ng tr√≤n FOV
local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2

local isAiming = false
local validNPCs = {}
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

-- Giao di·ªán
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 130, 0, 45)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "AIMBOT: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = ScreenGui

-- Hi·ªÉn th·ªã t√™n NPC
local NPCNameLabel = Instance.new("TextLabel")
NPCNameLabel.Size = UDim2.new(0, 200, 0, 30)
NPCNameLabel.Position = UDim2.new(0, 10, 1, -40) -- G√≥c tr√°i d∆∞·ªõi c√πng
NPCNameLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
NPCNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NPCNameLabel.Text = "NPC: None"
NPCNameLabel.TextSize = 14
NPCNameLabel.Font = Enum.Font.GothamBold
NPCNameLabel.Parent = ScreenGui

-- √Çm thanh th√¥ng b√°o khi b·∫≠t/t·∫Øt
local Sound = Instance.new("Sound", game.SoundService)
Sound.SoundId = "rbxassetid://6026984224"

-- Ki·ªÉm tra NPC h·ª£p l·ªá
local function isNPC(obj)
    return obj:IsA("Model") 
    and obj:FindFirstChild("Humanoid") 
    and obj.Humanoid.Health > 0 
    and obj:FindFirstChild("Head") 
    and obj:FindFirstChild("HumanoidRootPart") 
    and not game:GetService("Players"):GetPlayerFromCharacter(obj) 
    and obj.Name ~= "Horse"
    and obj.Name ~= "Unicorn"
end

-- C·∫≠p nh·∫≠t danh s√°ch NPC
local function updateNPCs()
    validNPCs = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if isNPC(obj) then
            table.insert(validNPCs, obj)
        end
    end
end

-- C·∫≠p nh·∫≠t v·ªã tr√≠ FOV
local function updateDrawings()
    FOVring.Position = Cam.ViewportSize / 2
    FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
end

-- Thu·∫≠t to√°n d·ª± ƒëo√°n v·ªã tr√≠ NPC
local function predictPos(target)
    local rootPart = target:FindFirstChild("HumanoidRootPart")
    local head = target:FindFirstChild("Head")
    if not rootPart or not head then 
        return head and head.Position or rootPart and rootPart.Position 
    end
    local velocity = rootPart.Velocity
    local predictionTime = 0.025
    local basePosition = rootPart.Position + velocity * predictionTime
    local headOffset = head.Position - rootPart.Position
    return basePosition + headOffset
end

-- T√¨m m·ª•c ti√™u g·∫ßn nh·∫•t trong FOV
local function getTarget()
    local nearest, minDistance = nil, math.huge
    local viewportCenter = Cam.ViewportSize / 2
    raycastParams.FilterDescendantsInstances = {Player.Character}

    for _, npc in ipairs(validNPCs) do
        local predictedPos = predictPos(npc)
        local screenPos, visible = Cam:WorldToViewportPoint(predictedPos)
        if visible and screenPos.Z > 0 then
            local ray = workspace:Raycast(
                Cam.CFrame.Position, 
                (predictedPos - Cam.CFrame.Position).Unit * 1000, 
                raycastParams
            )
            if ray and ray.Instance:IsDescendantOf(npc) then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                if distance < minDistance and distance < fov then
                    minDistance = distance
                    nearest = npc
                end
            end
        end
    end
    return nearest
end

-- ƒêi·ªÅu ch·ªânh g√≥c nh√¨n ƒë·ªÉ aim
local function aim(targetPosition)
    local currentCF = Cam.CFrame
    local targetDirection = (targetPosition - currentCF.Position).Unit
    local smoothFactor = 0.65
    local newLookVector = currentCF.LookVector:Lerp(targetDirection, smoothFactor)
    Cam.CFrame = CFrame.new(currentCF.Position, currentCF.Position + newLookVector)
end

-- V√≤ng l·∫∑p ch√≠nh
local lastUpdate = 0
local UPDATE_INTERVAL = 0.3

RunService.Heartbeat:Connect(function(dt)
    updateDrawings()
    lastUpdate = lastUpdate + dt
    if lastUpdate >= UPDATE_INTERVAL then
        updateNPCs()
        lastUpdate = 0
    end

    if isAiming then
        local target = getTarget()
        if target then
            local predictedPosition = predictPos(target)
            aim(predictedPosition)
            NPCNameLabel.Text = "NPC: " .. target.Name
        else
            NPCNameLabel.Text = "NPC: None"
        end
    else
        NPCNameLabel.Text = "NPC: None"
    end
end)

-- N√∫t b·∫≠t/t·∫Øt
ToggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming
    FOVring.Visible = isAiming
    ToggleButton.Text = "AIMBOT: " .. (isAiming and "ON" or "OFF")
    ToggleButton.TextColor3 = isAiming and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)

    -- Ph√°t √¢m thanh khi chuy·ªÉn ƒë·ªïi
    Sound:Play()
end)

-- K√©o th·∫£ n√∫t (gi·ªõi h·∫°n trong m√†n h√¨nh)
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    local newX = math.clamp(startPos.X.Offset + delta.X, 0, Cam.ViewportSize.X - ToggleButton.AbsoluteSize.X)
    local newY = math.clamp(startPos.Y.Offset + delta.Y, 0, Cam.ViewportSize.Y - ToggleButton.AbsoluteSize.Y)
    ToggleButton.Position = UDim2.new(startPos.X.Scale, newX, startPos.Y.Scale, newY)
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

end)

task.spawn(function()
local espColor = Color3.fromRGB(255, 255, 255) -- M√†u ch·ªØ tr·∫Øng
local outlineColor = Color3.fromRGB(128, 128, 128) -- Vi·ªÅn x√°m
local highlightColor = Color3.fromRGB(0, 255, 0)

-- T·∫°o ESP
local function createESP(item)
    -- T·∫°o BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "JadeTabletESP"
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.MaxDistance = math.huge  -- Hi·ªÉn th·ªã ·ªü kho·∫£ng c√°ch v√¥ h·∫°n
    billboard.Parent = item

    -- T·∫°o TextLabel
    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboard
    textLabel.Text = "üü© JadeTablet"
    textLabel.TextColor3 = espColor
    textLabel.TextStrokeColor3 = outlineColor
    textLabel.TextStrokeTransparency = 0
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.TextSize = 10

    -- T·∫°o Highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "JadeTabletHighlight"
    highlight.FillColor = highlightColor
    highlight.FillTransparency = 0.5 -- ƒê·ªô trong su·ªët v·ª´a ƒë·ªß
    highlight.OutlineColor = highlightColor
    highlight.OutlineTransparency = 0
    highlight.Parent = item
end

-- Ki·ªÉm tra v√† th√™m ESP + Highlight
local function checkForJadeTablets()
    for _, item in ipairs(workspace:GetDescendants()) do
        if item:IsA("Model") and (item.Name == "JadeTablet2" or item.Name == "JadeTablet3" or item.Name == "JadeTablet4") then
            local jadeTablet = item:FindFirstChild("JadeTablet")
            if jadeTablet and not jadeTablet:FindFirstChild("JadeTabletESP") then
                createESP(jadeTablet)
            end
        end
    end
end

-- L·∫Øng nghe khi JadeTablet m·ªõi xu·∫•t hi·ªán
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Model") and (descendant.Name == "JadeTablet2" or descendant.Name == "JadeTablet3" or descendant.Name == "JadeTablet4") then
        local jadeTablet = descendant:FindFirstChild("JadeTablet")
        if jadeTablet then
            createESP(jadeTablet)
        end
    end
end)

-- Kh·ªüi ƒë·ªông ki·ªÉm tra ban ƒë·∫ßu
checkForJadeTablets()
end)

task.spawn(function()
    local player = game.Players.LocalPlayer

    local function unlockCamera()
        player.CameraMaxZoomDistance = 400  -- Zoom xa t·ªëi ƒëa
        player.CameraMinZoomDistance = 0.5  -- Zoom g·∫ßn t·ªëi thi·ªÉu
        player.CameraMode = Enum.CameraMode.Classic  -- Ch·∫ø ƒë·ªô camera Classic
    end

    -- Thi·∫øt l·∫≠p ban ƒë·∫ßu
    unlockCamera()

    -- T·ª± ƒë·ªông ch·ªânh l·∫°i n·∫øu game thay ƒë·ªïi
    game:GetService("RunService").RenderStepped:Connect(unlockCamera)
end)

task.spawn(function()
local function createNameTag(player)
    if player == game.Players.LocalPlayer then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NameTag"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0) -- ƒêi·ªÅu ch·ªânh v·ªã tr√≠ g·∫ßn v·ªõi t√™n m·∫∑c ƒë·ªãnh c·ªßa Roblox
    billboard.AlwaysOnTop = true
    billboard.Parent = player.Character:WaitForChild("Head")

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboard
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeTransparency = 0
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 15 -- TƒÉng k√≠ch th∆∞·ªõc l√™n 15
    textLabel.Text = player.Name
end

local function onCharacterAdded(character)
    createNameTag(game.Players:GetPlayerFromCharacter(character))
end

for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Character then
        createNameTag(player)
    end
    player.CharacterAdded:Connect(onCharacterAdded)
end

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(onCharacterAdded)
end)
end)

task.spawn(function()
for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
	if v:IsA("ProximityPrompt") then
		v["HoldDuration"] = 0.5
	end
end


game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(v)
    v["HoldDuration"] = 0.5
end)
end)

task.spawn(function()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Script Loaded",
        Text = "Good Script for Dead Rails has loaded",
        Duration = 3
    })
end)

task.spawn(function()
    local espColor = Color3.fromRGB(0, 255, 0) -- Ch·ªØ xanh
    local outlineColor = Color3.fromRGB(255, 255, 255) -- Vi·ªÅn tr·∫Øng
    local highlightColor = Color3.fromRGB(0, 255, 0) -- M√†u xanh l√°

    -- T·∫°o ESP
    local function createESP(item)
        local maskPart = item:FindFirstChild("Mask")
        if not maskPart then return end -- N·∫øu kh√¥ng t√¨m th·∫•y "Mask", tho√°t

        -- T·∫°o BillboardGui
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "StrangeMaskESP"
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.MaxDistance = math.huge
        billboard.Parent = maskPart

        -- T·∫°o TextLabel
        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.Text = "üü© StrangeMask"
        textLabel.TextColor3 = espColor
        textLabel.TextStrokeColor3 = outlineColor
        textLabel.TextStrokeTransparency = 0
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.TextSize = 15
        textLabel.Font = Enum.Font.SourceSansBold

        -- T·∫°o Highlight
        local highlight = Instance.new("Highlight")
        highlight.Name = "StrangeMaskHighlight"
        highlight.FillColor = highlightColor
        highlight.FillTransparency = 1
        highlight.OutlineColor = outlineColor
        highlight.OutlineTransparency = 0
        highlight.Parent = item
    end

    -- Ki·ªÉm tra v√† th√™m ESP + Highlight
    local function checkForStrangeMasks()
        for _, item in ipairs(workspace:GetDescendants()) do
            if item:IsA("Model") and item.Name == "StrangeMask" then
                if not item:FindFirstChild("StrangeMaskESP") then
                    createESP(item)
                end
            end
        end
    end

    -- L·∫Øng nghe khi StrangeMask m·ªõi xu·∫•t hi·ªán
    workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("Model") and descendant.Name == "StrangeMask" then
            createESP(descendant)
        end
    end)

    -- X√≥a ESP khi StrangeMask bi·∫øn m·∫•t
    workspace.DescendantRemoving:Connect(function(descendant)
        if descendant:IsA("Model") and descendant.Name == "StrangeMask" then
            if descendant:FindFirstChild("StrangeMaskESP") then
                descendant.StrangeMaskESP:Destroy()
            end
            if descendant:FindFirstChild("StrangeMaskHighlight") then
                descendant.StrangeMaskHighlight:Destroy()
            end
        end
    end)

    -- Kh·ªüi ƒë·ªông ki·ªÉm tra ban ƒë·∫ßu
    checkForStrangeMasks()
end)
